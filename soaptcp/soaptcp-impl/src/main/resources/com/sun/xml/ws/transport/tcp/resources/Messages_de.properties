#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# i18n messages for SOAP/TCP code

# Logger error messages
WSTCP0001.MESSAGE_PROCESS_FAILED=WSTCP0001:Verarbeitung von Nachricht nicht erfolgreich.
WSTCP0002.SERVER_ERROR_MESSAGE_SENDING_FAILED=WSTCP0002: Fehlermeldung konnte nicht an Client gesendet werden.
WSTCP0003.TARGET_WS_NOT_FOUND=WSTCP0003: Ziel-WS nicht gefunden. Ziel-URI: {0}
WSTCP0004.CHECK_SERVER_LOG=WSTCP0004: Weitere Einzelheiten finden Sie im Serverlog
WSTCP0005.INVALID_EP_URL=WSTCP0005:Ung\u00FCltige End Point-URL: {0}
WSTCP0006.VERSION_MISMATCH=WSTCP0006: Nicht \u00FCbereinstimmende Versionen
WSTCP0007.TRANSPORT_MODULE_NOT_INITIALIZED=WSTCP0007:Transportmodul wurde nicht initialisiert.
# {0} - qname (of webservice)
WSTCP0008.ERROR_TCP_ADAPTER_CREATE=WSTCP0008: Fehler bei der Erstellung des TCP-Adapters f\u00FCr {0}
WSTCP0009.UNKNOWN_BINDING=WSTCP0009: Unbekanntes WSBinding {0}
WSTCP0010.UNKNOWN_PARAMETER=WSTCP0010: Unbekannter Parameter {0}.
WSTCP0011.UNKNOWN_CONTENT_TYPE=WSTCP0011: Unbekannter Content-Type {0}
# Added space between Retry and #. {0} stands for a number. Word "number" can be used instead of # in translation.
WSTCP0012.SEND_RETRY=WSTCP0012: Senden nicht erfolgreich. Wiederholungs-Nr. {0}
WSTCP0013.TCP_PROCESSOR_NOT_REGISTERED=WSTCP0013: WS TCP-Anforderung eingegangen. Jedoch kein Prozessor registriert.
WSTCP0014.NO_JAXWS_DESCRIPTOR=WSTCP0014: Keine JAX-WS-Deskriptordatei gefunden
WSTCP0015.ERROR_PROTOCOL_VERSION_EXCHANGE=WSTCP0015: Fehler beim Austausch der Protokollversion
WSTCP0016.ERROR_WS_EXECUTION_ON_SERVER=WSTCP0016: Fehler bei der Ausf\u00FChrung des Webservice. Serverfehler: {0}
WSTCP0017.ERROR_WS_EXECUTION_ON_CLIENT=WSTCP0017: Fehler bei der Ausf\u00FChrung des Webservice
WSTCP0018.ERROR_READING_FROM_SOCKET=WSTCP0018: Fehler beim Lesen aus Socket
WSTCP0019.PEER_DISCONNECTED=WSTCP0019: Peer hat Verbindung mit Host: {0} Port: {1} beendet
# Magic number = a constant numerical or text value used to identify a file format or protocol. In this case it is a protocol. When an input stream is opened on a connection there should be a certain string present at the very beginning of this input stream. If it's not there then this error message is raised.
WSTCP0020.WRONG_MAGIC=WSTCP0020: Falsche Magic-Zahl: {0}
WSTCP0021.TCP_ADAPTER_UNSUPPORTER_OPERATION=WSTCP0021: Nicht unterst\u00FCtzter Vorgang. Codec kann Antwortnachrichtentyp nicht erkennen.
WSTCP0022.ERROR_WS_EXECUTION=WSTCP0022: Fehler bei der Verarbeitung der Anforderungsnachricht. Clienthost: {0} Port: {1}
WSTCP0023.TARGET_EXEC_ERROR=WSTCP0023: Fehler bei der Ausf\u00FChrung von WS-Ziel. Clienthost: {0} Port: {1}
WSTCP0024.SERVICE_CHANNEL_EXCEPTION=WSTCP0024: Ausnahme bei der Ausf\u00FChrung des Connection Management-Webservicevorgangs. ID: {0} Beschreibung: {1}
WSTCP0025.GENERAL_CHANNEL_ERROR=WSTCP0025: Allgemeiner Kanalfehler. {0}
WSTCP0026.UNKNOWN_CHANNEL_ID=WSTCP0026: Unbekannte Kanal-ID: {0}
WSTCP0027.MALFORMED_FRAME=WSTCP0027: Fehlerhaftes Frameformat. {0}
WSTCP0028.UNKNOWN_MESSAGE_ID=WSTCP0028: Unbekannte Nachrichten-ID: {0}
WSTCP0029.INCORRECT_FRAME_SEQ=WSTCP0029: Falsche Nachrichtenframesequenz. {0}
WSTCP0030.INTERLEAVED_FRAME_SEQ=WSTCP0030: \u00DCberlappende Nachrichtenframesequenz. {0}
WSTCP0031.UNKNOWN_REQ_RESP_PATTERN=WSTCP0031: Unbekanntes Anforderungs-/Antwortmuster. {0}
WSTCP0032.UNEXPECTED_TRANSPORT_SOAP_ACTION=WSTCP0032: Es wird nicht erwartet, dass der Transport-SOAPAction-Parameter festgelegt ist. Er wird bei SOAP1.2 nicht verwendet
WSTCP0033.CONTENT_NEGOTIATION_FAILED=WSTCP0033: Contentnegotiation f\u00FCr WS End Point nicht erfolgreich: {0}.Vom Server unterst\u00FCtzter Content: {1}
WSTCP0034.WS_ENDPOINT_NOT_FOUND=WSTCP0034: Webservice f\u00FCr End Point {0} nicht gefunden.
WSTCP0035.UNKNOWN_CHANNEL_UD=WSTCP0035: Kanal-ID {0} ist nicht vorhanden.

# Logger debug messages
WSTCP1001.TCP_SERVICE_TP_PROCESS_ENTER=WSTCP1001:ServiceChannelTransportPipe.process() entering. Target URI: {0}
WSTCP1002.TCP_SERVICE_TP_PROCESS_TRANSPORT_REUSE=WSTCP1002:ServiceChannelTransportPipe.process() reuse client transport
WSTCP1003.TCP_SERVICE_TP_PROCESS_TRANSPORT_CREATE=WSTCP1003:ServiceChannelTransportPipe.process() create new client transport
WSTCP1004.TCP_SERVICE_TP_PROCESS_ENCODE=WSTCP1004:ServiceChannelTransportPipe.process() encode. ContentType: {0}
WSTCP1005.TCP_SERVICE_TP_PROCESS_SEND=WSTCP1005:ServiceChannelTransportPipe.process() send
WSTCP1006.TCP_SERVICE_TP_PROCESS_OPEN_PREPARE_READING=WSTCP1006:ServiceChannelTransportPipe.process() prepare reading
WSTCP1007.TCP_SERVICE_TP_PROCESS_OPEN_PROCESS_READING=WSTCP1007:ServiceChannelTransportPipe.process() process reading. Status: {0}, ContentType: {1}

WSTCP1010.TCP_TP_PROCESS_ENTER=WSTCP1010:TCPTransportPipe.process() entering. Target URI: {0}
WSTCP1011.TCP_TP_PROCESS_TRANSPORT_CREATE=WSTCP1011:TCPTransportPipe.process() create new client transport
WSTCP1012.TCP_TP_PROCESS_TRANSPORT_REUSE=WSTCP1011:TCPTransportPipe.process() create new client transport
WSTCP1013.TCP_TP_PROCESS_ENCODE=WSTCP1013:TCPTransportPipe.process() encode. ContentType: {0}
WSTCP1014.TCP_TP_PROCESS_SEND=WSTCP1014:TCPTransportPipe.process() send
WSTCP1015.TCP_TP_PROCESS_OPEN_PREPARE_READING=WSTCP1015:TCPTransportPipe.process() prepare reading
WSTCP1016.TCP_TP_PROCESS_OPEN_PROCESS_READING=WSTCP1016:TCPTransportPipe.process() process reading. Status: {0}, ContentType: {1}

WSTCP1020.CONNECTION_CACHE_ENTER=WSTCP1020:WSConnectionCache.lockConnection entering
WSTCP1021.CONNECTION_CACHE_SYNC=WSTCP1021:WSConnectionCache.lockConnection inside sync
WSTCP1022.CONNECTION_CACHE_LOCK=WSTCP1022:WSConnectionCache.lockConnection lock
WSTCP1023.CONNECTION_CACHE_SESSION_ABORTED=WSTCP1023:WSConnectionCache.lockConnection session aborted

WSTCP1030.CONNECTION_MANAGER_ENTER=WSTCP1030:WSConnectionManager.openChannel entering URI: {0}, Service: {1}, Binding: {2}, Codec: {3}
WSTCP1031.CONNECTION_MANAGER_USE_OPENED_SESSION=WSTCP1031:WSConnectionManager.openChannel Use opened session
WSTCP1032.CONNECTION_MANAGER_OFFER_SESSION_FOR_REUSE=WSTCP1032:WSConnectionManager.openChannel Offer session for reuse
WSTCP1033.CONNECTION_MANAGER_RETURN_CHANNEL_CONTEXT=WSTCP1033:WSConnectionManager.openChannel Return channelContext Id: {0}
WSTCP1034.CONNECTION_MANAGER_CREATE_SESSION_ENTER=WSTCP1034:WSConnectionManager.createConnectionSession entering URI: {0}
WSTCP1035.CONNECTION_MANAGER_INITIATE_SESSION=WSTCP1035:WSConnectionManager.createConnectionSession call ServiceWS.initiateSession
WSTCP1036.CONNECTION_MANAGER_DO_OPEN_CHANNEL_ENTER=WSTCP1036:WSConnectionManager.doOpenChannel - Aktivierung
WSTCP1037.CONNECTION_MANAGER_DO_OPEN_WS_CALL=WSTCP1037:WSConnectionManager.doOpenChannel call ServiceWS.openChannel targetURI: {0} \nnegotiatingMimeTypes: {1} \nnegotiatingParams: {2}
WSTCP1038.CONNECTION_MANAGER_DO_OPEN_PROCESS_SERVER_SETTINGS=WSTCP1038:WSConnectionManager.doOpenChannel serverSettings: {0}
WSTCP1039.CONNECTION_MANAGER_DO_OPEN_REGISTER_CHANNEL=WSTCP1039:WSConnectionManager.doOpenChannel register channel Id: {0}
WSTCP1040.CONNECTION_MANAGER_DO_CHECK_VERSION_ENTER=WSTCP1040:WSConnectionManager.doCheckVersions enter framingVersion: {0} connectionMngmntVersion: {1}
WSTCP1041.CONNECTION_MANAGER_DO_CHECK_VERSION_SENT=WSTCP1041:WSConnectionManager.doCheckVersions version sent
WSTCP1043.CONNECTION_MANAGER_NOTIFY_SESSION_CLOSE=WSTCP1043: Session-URI: {0} wurde geschlossen
WSTCP1044.CONNECTION_MANAGER_CLIENT_SIDE_CONNECTION_CACHE=WSTCP1044:Clientseitige SOAP/TCP-Connection-Cacheeinstellungen. HighWaterMark: {0}, MaxParallelConnections: {1}, NumberToReclaim: {2}

WSTCP1050.CONNECTION_BUFFERING_IS=WSTCP1050:Connection.prepareForReading Buffering Connection.InputStream. Size: {0}
WSTCP1051.CONNECTION_OPEN_TCP_SOCKET=WSTCP1051:Connection.create Opening connection host: {0} port: {1}

WSTCP1060.FRAMED_MESSAGE_IS_READ_HEADER_ENTER=WSTCP1060:FramedMessageInputStream.readHeader
WSTCP1061.FRAMED_MESSAGE_IS_READ_HEADER_DONE=WSTCP1061:FramedMessageInputStream.readHeader done. channelId: {0}, messageId: {1}, content-id: {2}, content-params: {3}, currentFrameDataSize: {4}, isLastFrame: {5}
WSTCP1062.FRAMED_MESSAGE_IS_READ_UNEXPECTED_EOF=WSTCP1062:Unexpected EOF. isLastFrame: {0}, frameBytesRead: {1}, frameSize: {2}, currentFrameDataSize: {3}

WSTCP1070.OUTPUT_WRITER_DUMP=WSTCP1070:Output dump to host: {0} port: {1}:

WSTCP1080.INCOME_MSG_PROC_ENTER=WSTCP1080: Verarbeitung von eingehender Anforderung von Host: {0} Port: {1}:
WSTCP1081.INCOME_MSG_CREATE_NEW_SESSION=WSTCP1081: Neue ConnectionSession erstellen
WSTCP1082.INCOME_MSG_VERSION_CHECK_ENTER=WSTCP1082: Aktivierung
WSTCP1083.INCOME_MSG_VERSION_CHECK_RESULT=WSTCP1083: Version check clientFramingVersion: {0}, clientConnectionMngmntVersion: {1}, serverFramingVersion: {2}, serverConnectionMngmntVersion: {3}, successCode: {4}
WSTCP1084.INCOME_MSG_SERVER_SIDE_CONNECTION_CACHE=WSTCP1084: Serverseitige SOAP/TCP-Connection-Cacheeinstellungen. HighWaterMark: {0}, NumberToReclaim: {1}

WSTCP1090.TCP_ADAPTER_REQ_CONTENT_TYPE=WSTCP1090: Anforderungs-contentType {0}
WSTCP1091.TCP_ADAPTER_DECODED=WSTCP1091: Decodiert
WSTCP1092.TCP_ADAPTER_RPL_CONTENT_TYPE=WSTCP1092: Antwort-contentType: {0}
WSTCP1093.TCP_ADAPTER_ONE_WAY=WSTCP1093: Unidirektionale Nachricht
WSTCP1094.TCP_ADAPTER_CLOSE=WSTCP1094: close() Callback-Methode wird aufgerufen. Nachricht ist unidirektional
WSTCP1095.TCP_ADAPTER_WRITE_INTERNAL_SERVER_ERROR=WSTCP1095: writeInternalServerError() aufgerufen.

WSTCP1100.WSTCP_DELEGATE_DEREGISTER_ADAPTER=WSTCP1100: Registrierung von Adapter aufheben. URL: {0}
WSTCP1101.WSTCP_DELEGATE_REGISTER_ADAPTER=WSTCP1101: Adapter registrieren. URL: {0}
WSTCP1102.WSTCP_DELEGATE_GOING_TO_CUSTOM_REG=WSTCP1102: Zu benutzerdefinierter Registry-URL gehen: {0}
WSTCP1103.WSTCP_DELEGATE_ON_MESSAGE=WSTCP1103: OnMessage Host: {0}, Port: {1}, localHost: {2}, localPort: {3}
WSTCP1104.WSTCP_DELEGATE_ON_MESSAGE_COMPLETED=WSTCP1104: OnMessage abgeschlossen
WSTCP1105.WSTCP_DELEGATE_DESTROY=WSTCP1105: Endg\u00FCltig l\u00F6schen

WSTCP1110.APP_SERV_REG_REGISTER_ENDPOINT=WSTCP1110: End Point registrieren. ServiceName: {0} Pfad: {1} isEJB: {2}
WSTCP1111.APP_SERV_REG_DEREGISTER_ENDPOINT=WSTCP1111: Registrierung von End Point aufheben. ServiceName: {0} Pfad: {1} isEJB: {2}
WSTCP1112.APP_SERV_REG_GET_ENDP_CR_NON_EJB=WSTCP1112: EndpointContextRoot nonEJB WS. ContextRoot: {0}
WSTCP1113.APP_SERV_REG_GET_ENDP_CR_EJB=WSTCP1113: EndpointContextRoot EJB WS. ContextRoot: {0}
WSTCP1114.APP_SERV_REG_GET_ENDP_URL_PATTERN_NON_EJB=WSTCP1114: EndpointUrlPattern nonEJB WS. URLPattern: {0}
WSTCP1115.APP_SERV_REG_GET_ENDP_URL_PATTERN_EJB=WSTCP1115: EndpointUrlPattern EJB WS. URLPattern: {0}
WSTCP1116.APP_SERV_REG_GET_WS_ENDP_PATH_NON_EJB=WSTCP1116: WebServiceEndpointPath nonEJB WS. Path: {0}
WSTCP1117.APP_SERV_REG_GET_WS_ENDP_PATH_EJB=WSTCP1117: WebServiceEndpointPath EJB WS. Pfad: {0}

WSTCP1120.CHANNEL_CONTEXT_ENCODE_CT=WSTCP1120: Content-Type codieren: {0}
WSTCP1121.CHANNEL_CONTEXT_ENCODED_CT=WSTCP1121: Codierte mimeId: {0} Parameter: {1}
WSTCP1122.CHANNEL_CONTEXT_DECODE_CT=WSTCP1122: mimeId: {0} Parameter: {1}
WSTCP1123.CHANNEL_CONTEXT_DECODED_CT=WSTCP1123: Decodierter Content-Type: {0}

WSTCP1130.CONNECTION_MNGMNT_SETTINGS_LOADED=WSTCP1130: Benutzerdefinierte SOAP/TCP-Verbindungseinstellungen geladen. HighWaterMark: {0}, MaxParallelConnections: {1}, NumberToReclaim: {2}

WSTCP1140.SOAPTCP_SESSION_OPEN=WSTCP1140: Session: {0} ge\u00F6ffnet
# {1} - channel ID (it's a number), you can translate # as "number"
WSTCP1141.SOAPTCP_CHANNEL_OPEN=WSTCP1141: Session: {0}. Kanal-Nr.{1} wurde f\u00FCr WS ge\u00F6ffnet: {2}
# {1} - channel ID (it's a number), you can translate # as "number"
WSTCP1142.SOAPTCP_CHANNEL_CLOSE=WSTCP1142: Session: {0}. Kanal-Nr. {1} wurde geschlossen

WSTCP1150.CON_MNGMNT_SETTINGS_POLICY=WSTCP1150: Policy-basierter ConnectionManagementSettings Holder \u00FCbernommen
WSTCP1151.CON_MNGMNT_SETTINGS_SYST_PROPS=WSTCP1151: Auf Systemeigenschaften basierter ConnectionManagementSettings Holder \u00FCbernommen

WSTCP1160.PORT_ATTR_INVALID_VALUE=WSTCP1160: Ung\u00FCltiger SOAP/TCP-Portwert: {0}. Wert wird zur Laufzeit festgelegt
WSTCP1161.ADD_PORT_ATTR_INIT_FAIL=WSTCP1161: Unerwartete Ausnahme beim Versuch, writeAttribute-Aufruf zu initialisieren
WSTCP1162.UNSUPPORTED_PORT_ATTRIBUTE=WSTCP1162: SOAP/TCP hat keinen eigenen TCP-Listener, sodass die SOAP/TCP-Laufzeitumgebung das g\u00FCltige 'port'-Attribut nicht festlegen kann. 'Port'-Attribut wird ignoriert

WSTCP1170.INIT_SOAPTCP=SOAP/TCP wird auf Port {0} initialisiert
WSTCP1171.START_SOAPTCP_LISTENER=SOAP/TCP wird gestartet
WSTCP1172.PAUSE_SOAPTCP_LISTENER=SOAP/TCP wird unterbrochen
WSTCP1173.RESUME_SOAPTCP_LISTENER=SOAP/TCP wird wiederaufgenommen
WSTCP1174.TOMCAT_SOAPTCP_LISTENER=Tomcat SOAP/TCP-Listener auf Port {0}

# Standalone run messages
WSTCP2000.STANDALONE_EXCEPTION=WSTCP2000: Ausnahme bei Standalone-Ausf\u00FChrung.
WSTCP2001.STANDALONE_ADAPTER_REGISTERED=WSTCP2001: Adapter: "{0}" mit URL-Muster "{1}" ist registriert.
WSTCP2002.STANDALONE_ADAPTER_NOT_REGISTERED=WSTCP2002: Adapter: "{0}" mit URL-Muster "{1}" ist nicht registriert.

# Console messages (development only)
STANDALONE_RUN=WSTCP <WS_CONTEXT_ROOT> [-enableProtocolCheck] ausf\u00FChren
STANDALONE_EXIT=Dr\u00FCcken Sie die Eingabetaste, um den Vorgang zu beenden
