#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# i18n messages for SOAP/TCP code

# Logger error messages
WSTCP0001.MESSAGE_PROCESS_FAILED=WSTCP0001:falha ao processar a mensagem!
WSTCP0002.SERVER_ERROR_MESSAGE_SENDING_FAILED=WSTCP0002:falha ao enviar a mensagem de erro ao cliente!
WSTCP0003.TARGET_WS_NOT_FOUND=WSTCP0003:WS do alvo n\u00E3o encontrado. TargetURI: {0}
WSTCP0004.CHECK_SERVER_LOG=WSTCP0004:para obter detalhes do log do servidor de verifica\u00E7\u00E3o
WSTCP0005.INVALID_EP_URL=WSTCP0005:URL do ponto final inv\u00E1lido: {0}
WSTCP0006.VERSION_MISMATCH=WSTCP0006:incompatibilidade da vers\u00E3o!
WSTCP0007.TRANSPORT_MODULE_NOT_INITIALIZED=WSTCP0007:m\u00F3dulo de transporte n\u00E3o inicializado!
# {0} - qname (of webservice)
WSTCP0008.ERROR_TCP_ADAPTER_CREATE=WSTCP0008:erro ao criar o adaptador de TCP para {0}
WSTCP0009.UNKNOWN_BINDING=WSTCP0009:WSBinding {0} Desconhecido
WSTCP0010.UNKNOWN_PARAMETER=WSTCP0010:par\u00E2metro {0} desconhecido
WSTCP0011.UNKNOWN_CONTENT_TYPE=WSTCP0011:tipo de conte\u00FAdo {0} desconhecido
# Added space between Retry and #. {0} stands for a number. Word "number" can be used instead of # in translation.
WSTCP0012.SEND_RETRY=WSTCP0012:Sending failed. Retry #{0}
WSTCP0013.TCP_PROCESSOR_NOT_REGISTERED=WSTCP0013:solicita\u00E7\u00E3o de TCP de WS recebida, mas nenhum processador registrado!
WSTCP0014.NO_JAXWS_DESCRIPTOR=WSTCP0014:nenhum arquivo do descritor de JAX-WS encontrado
WSTCP0015.ERROR_PROTOCOL_VERSION_EXCHANGE=WSTCP0015:erro ao trocar a vers\u00E3o do protocolo
WSTCP0016.ERROR_WS_EXECUTION_ON_SERVER=WSTCP0016:erro ao executar o web service. Erro do servidor: {0}
WSTCP0017.ERROR_WS_EXECUTION_ON_CLIENT=WSTCP0017:erro ao executar o web service
WSTCP0018.ERROR_READING_FROM_SOCKET=WSTCP0018:erro ao ler do soquete
WSTCP0019.PEER_DISCONNECTED=WSTCP0019:host desconectado do mesmo n\u00EDvel: {0} porta: {1}
# Magic number = a constant numerical or text value used to identify a file format or protocol. In this case it is a protocol. When an input stream is opened on a connection there should be a certain string present at the very beginning of this input stream. If it's not there then this error message is raised.
WSTCP0020.WRONG_MAGIC=WSTCP0020: valor num\u00E9rico ou de texto constante incorreto: {0}
WSTCP0021.TCP_ADAPTER_UNSUPPORTER_OPERATION=WSTCP0021: opera\u00E7\u00E3o n\u00E3o suportada. Codec n\u00E3o pode reconhecer o tipo de mensagem de resposta!
WSTCP0022.ERROR_WS_EXECUTION=WSTCP0022: erro ao processar a mensagem de solicita\u00E7\u00E3o. Host do cliente: {0} porta: {1}
WSTCP0023.TARGET_EXEC_ERROR=WSTCP0023: erro ao executar o alvo de WS. Host do cliente {0} porta: {1}
WSTCP0024.SERVICE_CHANNEL_EXCEPTION=WSTCP0024: ocorreu uma exce\u00E7\u00E3o durante a execu\u00E7\u00E3o da opera\u00E7\u00E3o do web service do Gerenciamento de Conex\u00F5es. Id: {0} Descri\u00E7\u00E3o: {1}
WSTCP0025.GENERAL_CHANNEL_ERROR=WSTCP0025: erro de canal geral. {0}
WSTCP0026.UNKNOWN_CHANNEL_ID=WSTCP0026: identificador de canal: {0} desconhecido
WSTCP0027.MALFORMED_FRAME=WSTCP0027: quadro {0} incorreto.
WSTCP0028.UNKNOWN_MESSAGE_ID=WSTCP0028: identificador de mensagem: {0} desconhecido
WSTCP0029.INCORRECT_FRAME_SEQ=WSTCP0029: sequ\u00EAncia de quadro da mensagem {0} incorreto.
WSTCP0030.INTERLEAVED_FRAME_SEQ=WSTCP0030: sequ\u00EAncia de quadro de mensagens intercaladas. {0}
WSTCP0031.UNKNOWN_REQ_RESP_PATTERN=WSTCP0031: padr\u00E3o de solicita\u00E7\u00E3o/resposta {0} desconhecido.
WSTCP0032.UNEXPECTED_TRANSPORT_SOAP_ACTION=WSTCP0032: par\u00E2metro SOAPAction de transporte n\u00E3o esperado para ser definido. N\u00E3o \u00E9 usado com SOAP1.2
WSTCP0033.CONTENT_NEGOTIATION_FAILED=WSTCP0033: falha na negocia\u00E7\u00E3o de conte\u00FAdo para Ponto final de WS: {0} Conte\u00FAdo suportado do servidor: {1}
WSTCP0034.WS_ENDPOINT_NOT_FOUND=WSTCP0034: Web service do ponto final {0} n\u00E3o encontrado!
WSTCP0035.UNKNOWN_CHANNEL_UD=WSTCP0035: o id do canal {0} n\u00E3o existe!

# Logger debug messages
WSTCP1001.TCP_SERVICE_TP_PROCESS_ENTER=WSTCP1001:ServiceChannelTransportPipe.process() - entrando. URI: {0} do Alvo
WSTCP1002.TCP_SERVICE_TP_PROCESS_TRANSPORT_REUSE=WSTCP1002:ServiceChannelTransportPipe.process() - reutilizar transporte do cliente
WSTCP1003.TCP_SERVICE_TP_PROCESS_TRANSPORT_CREATE=WSTCP1003:ServiceChannelTransportPipe.process() - criar novo transporte do cliente
WSTCP1004.TCP_SERVICE_TP_PROCESS_ENCODE=WSTCP1004:ServiceChannelTransportPipe.process() - codificar. ContentType: {0}
WSTCP1005.TCP_SERVICE_TP_PROCESS_SEND=WSTCP1005:ServiceChannelTransportPipe.process() - enviar
WSTCP1006.TCP_SERVICE_TP_PROCESS_OPEN_PREPARE_READING=WSTCP1006:ServiceChannelTransportPipe.process() - preparar leitura
WSTCP1007.TCP_SERVICE_TP_PROCESS_OPEN_PROCESS_READING=WSTCP1007:ServiceChannelTransportPipe.process() - processar leitura. Status: {0}, ContentType: {1}

WSTCP1010.TCP_TP_PROCESS_ENTER=WSTCP1010:TCPTransportPipe.process() - entrar. URI do Alvo: {0}
WSTCP1011.TCP_TP_PROCESS_TRANSPORT_CREATE=WSTCP1011:TCPTransportPipe.process() - criar novo transporte do cliente
WSTCP1012.TCP_TP_PROCESS_TRANSPORT_REUSE=WSTCP1012:TCPTransportPipe.process() - reutilizar transporte do cliente
WSTCP1013.TCP_TP_PROCESS_ENCODE=WSTCP1013:TCPTransportPipe.process() - codificar. ContentType: {0}
WSTCP1014.TCP_TP_PROCESS_SEND=WSTCP1014:TCPTransportPipe.process() - enviar
WSTCP1015.TCP_TP_PROCESS_OPEN_PREPARE_READING=WSTCP1015:TCPTransportPipe.process() - preparar leitura
WSTCP1016.TCP_TP_PROCESS_OPEN_PROCESS_READING=WSTCP1016:TCPTransportPipe.process() - processar leitura. Status: {0}, ContentType: {1}

WSTCP1020.CONNECTION_CACHE_ENTER=WSTCP1020:WSConnectionCache.lockConnection - entrar
WSTCP1021.CONNECTION_CACHE_SYNC=WSTCP1021:WSConnectionCache.lockConnection - na sincroniza\u00E7\u00E3o
WSTCP1022.CONNECTION_CACHE_LOCK=WSTCP1022:WSConnectionCache.lockConnection - bloquear
WSTCP1023.CONNECTION_CACHE_SESSION_ABORTED=WSTCP1023:WSConnectionCache.lockConnection - sess\u00E3o abortada

WSTCP1030.CONNECTION_MANAGER_ENTER=WSTCP1030:WSConnectionManager.openChannel - inserir URI: {0}, Servi\u00E7o: {1}, Binding: {2}, Codec: {3}
WSTCP1031.CONNECTION_MANAGER_USE_OPENED_SESSION=WSTCP1031:WSConnectionManager.openChannel - Usar sess\u00E3o aberta
WSTCP1032.CONNECTION_MANAGER_OFFER_SESSION_FOR_REUSE=WSTCP1032:WSConnectionManager.openChannel - Sess\u00E3o de oferta para reutiliza\u00E7\u00E3o
WSTCP1033.CONNECTION_MANAGER_RETURN_CHANNEL_CONTEXT=WSTCP1033:WSConnectionManager.openChannel - Retornar Id de channelContext: {0}
WSTCP1034.CONNECTION_MANAGER_CREATE_SESSION_ENTER=WSTCP1034:WSConnectionManager.createConnectionSession - inserir URI: {0}
WSTCP1035.CONNECTION_MANAGER_INITIATE_SESSION=WSTCP1035:WSConnectionManager.createConnectionSession - chamar ServiceWS.initiateSession
WSTCP1036.CONNECTION_MANAGER_DO_OPEN_CHANNEL_ENTER=WSTCP1036:WSConnectionManager.doOpenChannel - inserir
WSTCP1037.CONNECTION_MANAGER_DO_OPEN_WS_CALL=WSTCP1037:WSConnectionManager.doOpenChannel - chamar ServiceWS.openChannel targetURI: {0} \nnegotiatingMimeTypes: {1} \nnegotiatingParams: {2}
WSTCP1038.CONNECTION_MANAGER_DO_OPEN_PROCESS_SERVER_SETTINGS=WSTCP1038:WSConnectionManager.doOpenChannel serverSettings: {0}
WSTCP1039.CONNECTION_MANAGER_DO_OPEN_REGISTER_CHANNEL=WSTCP1039:WSConnectionManager.doOpenChannel - registrar Id: {0} do canal
WSTCP1040.CONNECTION_MANAGER_DO_CHECK_VERSION_ENTER=WSTCP1040:WSConnectionManager.doCheckVersions - inserir framingVersion: {0} connectionMngmntVersion: {1}
WSTCP1041.CONNECTION_MANAGER_DO_CHECK_VERSION_SENT=WSTCP1041:WSConnectionManager.doCheckVersions - vers\u00E3o enviada
WSTCP1043.CONNECTION_MANAGER_NOTIFY_SESSION_CLOSE=WSTCP1043:o URI da Sess\u00E3o: {0} foi fechado
WSTCP1044.CONNECTION_MANAGER_CLIENT_SIDE_CONNECTION_CACHE=WSTCP1044: defini\u00E7\u00F5es do cache de conex\u00E3o do cliente SOAP/TCP. HighWaterMark: {0}, MaxParallelConnections: {1}, NumberToReclaim: {2}

WSTCP1050.CONNECTION_BUFFERING_IS=WSTCP1050:Connection.prepareForReading Buffering Connection.InputStream. Tamanho: {0}
WSTCP1051.CONNECTION_OPEN_TCP_SOCKET=WSTCP1051:Connection.create - Abrir conex\u00E3o host: {0} porta: {1}

WSTCP1060.FRAMED_MESSAGE_IS_READ_HEADER_ENTER=WSTCP1060:FramedMessageInputStream.readHeader
WSTCP1061.FRAMED_MESSAGE_IS_READ_HEADER_DONE=WSTCP1061:FramedMessageInputStream.readHeader - conclu\u00EDdo. channelId: {0}, messageId: {1}, content-id: {2}, content-params: {3}, currentFrameDataSize: {4}, isLastFrame: {5}
WSTCP1062.FRAMED_MESSAGE_IS_READ_UNEXPECTED_EOF=WSTCP1062:EOF Inesperado. isLastFrame: {0}, frameBytesRead: {1}, frameSize: {2}, currentFrameDataSize: {3}

WSTCP1070.OUTPUT_WRITER_DUMP=WSTCP1070:dump de sa\u00EDda para host: {0} porta: {1}:

WSTCP1080.INCOME_MSG_PROC_ENTER=WSTCP1080:iniciar processamento da solicita\u00E7\u00E3o de entrada do host: {0} porta: {1}:
WSTCP1081.INCOME_MSG_CREATE_NEW_SESSION=WSTCP1081:criar nova ConnectionSession
WSTCP1082.INCOME_MSG_VERSION_CHECK_ENTER=WSTCP1082: entrando
WSTCP1083.INCOME_MSG_VERSION_CHECK_RESULT=WSTCP1083: clientFramingVersion: {0} de verifica\u00E7\u00E3o da vers\u00E3o, clientConnectionMngmntVersion: {1}, serverFramingVersion: {2}, serverConnectionMngmntVersion: {3}, successCode: {4}
WSTCP1084.INCOME_MSG_SERVER_SIDE_CONNECTION_CACHE=WSTCP1084: defini\u00E7\u00F5es do cache de conex\u00E3o do servidor SOAP/TCP. HighWaterMark: {0}, NumberToReclaim: {1}

WSTCP1090.TCP_ADAPTER_REQ_CONTENT_TYPE=WSTCP1090: contentType {0} da solicita\u00E7\u00E3o
WSTCP1091.TCP_ADAPTER_DECODED=WSTCP1091: decodificado
WSTCP1092.TCP_ADAPTER_RPL_CONTENT_TYPE=WSTCP1092: contentType: {0} da resposta
WSTCP1093.TCP_ADAPTER_ONE_WAY=WSTCP1093: mensagem unidirecional
WSTCP1094.TCP_ADAPTER_CLOSE=WSTCP1094: o m\u00E9todo de callback close() foi chamado. Mensagem unidirecional
WSTCP1095.TCP_ADAPTER_WRITE_INTERNAL_SERVER_ERROR=WSTCP1095: writeInternalServerError() chamado.

WSTCP1100.WSTCP_DELEGATE_DEREGISTER_ADAPTER=WSTCP1100: cancelar o registro do adaptador. URL: {0}
WSTCP1101.WSTCP_DELEGATE_REGISTER_ADAPTER=WSTCP1101: registrar adaptador. URL: {0}
WSTCP1102.WSTCP_DELEGATE_GOING_TO_CUSTOM_REG=WSTCP1102: ir para o URL de registro: {0} personalizado
WSTCP1103.WSTCP_DELEGATE_ON_MESSAGE=WSTCP1103: host: {0}, porta: {1}, localHost: {2}, localPort: {3} de OnMessage
WSTCP1104.WSTCP_DELEGATE_ON_MESSAGE_COMPLETED=WSTCP1104: OnMessage conclu\u00EDdo
WSTCP1105.WSTCP_DELEGATE_DESTROY=WSTCP1105: destruir

WSTCP1110.APP_SERV_REG_REGISTER_ENDPOINT=WSTCP1110: registrar ponto final. ServiceName: {0} caminho: {1} isEJB: {2}
WSTCP1111.APP_SERV_REG_DEREGISTER_ENDPOINT=WSTCP1111: cancelar o registro do ponto final. ServiceName: {0} caminho: {1} isEJB: {2}
WSTCP1112.APP_SERV_REG_GET_ENDP_CR_NON_EJB=WSTCP1112: EndpointContextRoot nonEJB WS. ContextRoot: {0}
WSTCP1113.APP_SERV_REG_GET_ENDP_CR_EJB=WSTCP1113: EndpointContextRoot EJB WS. ContextRoot: {0}
WSTCP1114.APP_SERV_REG_GET_ENDP_URL_PATTERN_NON_EJB=WSTCP1114: EndpointUrlPattern nonEJB WS. URLPattern: {0}
WSTCP1115.APP_SERV_REG_GET_ENDP_URL_PATTERN_EJB=WSTCP1115: EndpointUrlPattern EJB WS. URLPattern: {0}
WSTCP1116.APP_SERV_REG_GET_WS_ENDP_PATH_NON_EJB=WSTCP1116: WebServiceEndpointPath nonEJB WS. Caminho: {0}
WSTCP1117.APP_SERV_REG_GET_WS_ENDP_PATH_EJB=WSTCP1117: WebServiceEndpointPath EJB WS. Caminho: {0}

WSTCP1120.CHANNEL_CONTEXT_ENCODE_CT=WSTCP1120: Codificar tipo de conte\u00FAdo: {0}
WSTCP1121.CHANNEL_CONTEXT_ENCODED_CT=WSTCP1121: mimeId: {0} par\u00E2metros: {1} codificados
WSTCP1122.CHANNEL_CONTEXT_DECODE_CT=WSTCP1122: mimeId: {0} par\u00E2metros: {1}
WSTCP1123.CHANNEL_CONTEXT_DECODED_CT=WSTCP1123: tipo de conte\u00FAdo: {0} decodificado

WSTCP1130.CONNECTION_MNGMNT_SETTINGS_LOADED=WSTCP1130: defini\u00E7\u00F5es de conex\u00E3o SOAP/TCP personalizadas carregadas. HighWaterMark: {0}, MaxParallelConnections: {1}, NumberToReclaim: {2}

WSTCP1140.SOAPTCP_SESSION_OPEN=WSTCP1140: Sess\u00E3o: {0} aberta
# {1} - channel ID (it's a number), you can translate # as "number"
WSTCP1141.SOAPTCP_CHANNEL_OPEN=WSTCP1141: Sess\u00E3o: {0}. o canal #{1} foi aberto para WS: {2}
# {1} - channel ID (it's a number), you can translate # as "number"
WSTCP1142.SOAPTCP_CHANNEL_CLOSE=WSTCP1142: sess\u00E3o: {0}. O canal n\u00FAmero {1} foi fechado

WSTCP1150.CON_MNGMNT_SETTINGS_POLICY=WSTCP1150: o detentor ConnectionManagementSettings baseado na pol\u00EDtica foi utilizado
WSTCP1151.CON_MNGMNT_SETTINGS_SYST_PROPS=WSTCP1151: o detentor ConnectionManagementSettings baseado nas propriedades do sistema foi utilizado

WSTCP1160.PORT_ATTR_INVALID_VALUE=WSTCP1160: Invalid SOAP/TCP port value: {0}. Value will be set by the runtime
WSTCP1161.ADD_PORT_ATTR_INIT_FAIL=WSTCP1161: Unexpected exception happened when trying to initialize writeAttribute invocation
WSTCP1162.UNSUPPORTED_PORT_ATTRIBUTE=WSTCP1162: SOAP/TCP doesn't have own TCP listener, so the SOAP/TCP runtime is not able to set the valid 'port' attribute. 'Port' attribute is ignored

WSTCP1170.INIT_SOAPTCP=Inicializando SOAP/TCP na porta {0}
WSTCP1171.START_SOAPTCP_LISTENER=Iniciando SOAP/TCP
WSTCP1172.PAUSE_SOAPTCP_LISTENER=Pausando SOAP/TCP
WSTCP1173.RESUME_SOAPTCP_LISTENER=Retomando SOAP/TCP
WSTCP1174.TOMCAT_SOAPTCP_LISTENER=Listener de SOAP/TCP de Tomcat na porta {0}

# Standalone run messages
WSTCP2000.STANDALONE_EXCEPTION=WSTCP2000: exce\u00E7\u00E3o durante a execu\u00E7\u00E3o stand-alone!
WSTCP2001.STANDALONE_ADAPTER_REGISTERED=WSTCP2001: Adaptador: "{0}" com padr\u00E3o de url "{1}" registrado.
WSTCP2002.STANDALONE_ADAPTER_NOT_REGISTERED=WSTCP2002: Adaptador: "{0}" com padr\u00E3o de url "{1}" n\u00E3o registrado.

# Console messages (development only)
STANDALONE_RUN=Execute WSTCP <WS_CONTEXT_ROOT> [-enableProtocolCheck]
STANDALONE_EXIT=Pressione a tecla enter para sair
