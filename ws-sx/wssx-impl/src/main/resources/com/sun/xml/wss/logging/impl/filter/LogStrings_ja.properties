#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#Error codes WSS 1400-1499 reserved for filter



WSS1400.nousername.found=WSS1400: \u30E6\u30FC\u30B6\u30FC\u540D\u30C8\u30FC\u30AF\u30F3\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002\u30EC\u30B7\u30FC\u30D0\u8981\u4EF6\u3092\u6E80\u305F\u3057\u3066\u3044\u307E\u305B\u3093

WSS1401.morethanone.username.found=WSS1401: \u8907\u6570\u306E\u30E6\u30FC\u30B6\u30FC\u540D\u30C8\u30FC\u30AF\u30F3\u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F\u3002\u30EC\u30B7\u30FC\u30D0\u8981\u4EF6\u3092\u6E80\u305F\u3057\u3066\u3044\u307E\u305B\u3093

WSS1402.error.posthoc=WSS1402: \u5185\u90E8\u30A8\u30E9\u30FC: POSTHOC\u30E2\u30FC\u30C9\u3067UsernameTokenFilter\u3092\u547C\u3073\u51FA\u3057\u307E\u3057\u305F

WSS1403.import.username.token=WSS1403: \u30E6\u30FC\u30B6\u30FC\u540D\u30D1\u30B9\u30EF\u30FC\u30C9\u30FB\u30C8\u30FC\u30AF\u30F3\u3092\u30A4\u30F3\u30DD\u30FC\u30C8\u4E2D\u306B\u4F8B\u5916\u304C\u767A\u751F\u3057\u307E\u3057\u305F

WSS1404.notmet.digested=WSS1404: \u30C0\u30A4\u30B8\u30A7\u30B9\u30C8\u30FB\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u30EC\u30B7\u30FC\u30D0\u8981\u4EF6\u3092\u6E80\u305F\u3057\u3066\u3044\u307E\u305B\u3093

WSS1405.notmet.plaintext=WSS1405: Plain-Text\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u30EC\u30B7\u30FC\u30D0\u8981\u4EF6\u3092\u6E80\u305F\u3057\u3066\u3044\u307E\u305B\u3093\u3002\u53D7\u4FE1\u3057\u305F\u30C8\u30FC\u30AF\u30F3\u306B\u3001Password-Digest\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u3059

WSS1406.notmet.nonce=WSS1406: nonce\u306E\u30EC\u30B7\u30FC\u30D0\u8981\u4EF6\u3092\u6E80\u305F\u3057\u3066\u3044\u307E\u305B\u3093

WSS1407.notmet.nononce=WSS1407: nonce\u306A\u3057\u306E\u30EC\u30B7\u30FC\u30D0\u8981\u4EF6\u3092\u6E80\u305F\u3057\u3066\u3044\u307E\u305B\u3093\u3002\u53D7\u4FE1\u3057\u305F\u30C8\u30FC\u30AF\u30F3\u306Bnonce\u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059



WSS1408.failed.sender.authentication=WSS1408: UsernameToken\u8A8D\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F

WSS1408.diag.cause.1=\u30C8\u30FC\u30AF\u30F3\u5185\u306E\u7121\u52B9\u306A\u30E6\u30FC\u30B6\u30FC\u540D/\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u30DA\u30A2



WSS1409.invalid.username.token=WSS1409: nonce\u3068created\u306E\u4E21\u65B9\u304C\u5B58\u5728\u3057\u306A\u3044\u7121\u52B9\u306AUsernameToken



WSS1410.error.creating.usernametoken=WSS1410: \u30E6\u30FC\u30B6\u30FC\u540D\u304C\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093

WSS1410.diag.cause.1=\u30E6\u30FC\u30B6\u30FC\u540D\u304C\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093

WSS1410.diag.check.1=\u69CB\u6210\u30D5\u30A1\u30A4\u30EB\u307E\u305F\u306F\u30B3\u30FC\u30EB\u30D0\u30C3\u30AF\u30FB\u30CF\u30F3\u30C9\u30E9\u306B\u3088\u3063\u3066\u30E6\u30FC\u30B6\u30FC\u540D\u304C\u6E21\u3055\u308C\u3066\u3044\u308B\u3053\u3068\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044



WSS1411.unableto.dump.soapmessage=WSS1411: \u30E1\u30C3\u30BB\u30FC\u30B8{0}\u3092\u30C0\u30F3\u30D7\u3067\u304D\u307E\u305B\u3093



WSS1412.error.processing.dynamicpolicy=WSS1412: \u52D5\u7684\u30DD\u30EA\u30B7\u30FC{0}\u306E\u51E6\u7406\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F



WSS1413.error.extracting.certificate=WSS1413: \u8A3C\u660E\u66F8\u306E\u62BD\u51FA\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F



WSS1414.error.extracting.symmetrickey=WSS1414: \u5BFE\u79F0\u9375{0}\u306E\u62BD\u51FA\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F



WSS1415.saml.assertion.notset=WSS1415: \u6697\u53F7\u5316\u51E6\u7406\u306ECallbackHandler\u306B\u3088\u3063\u3066SAML\u30A2\u30B5\u30FC\u30B7\u30E7\u30F3\u304C\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093



WSS1416.unsupported.keybinding=WSS1416: X509CertificateBinding\u3067\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u306A\u3044KeyBinding



WSS1417.exception.processing.signature=WSS1417: \u7F72\u540D{0}\u306E\u51E6\u7406\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F



WSS1418.saml.info.notset=WSS1418: SAML\u30A2\u30B5\u30FC\u30B7\u30E7\u30F3\u3068SAML AuthorityBinding\u60C5\u5831\u306E\u3044\u305A\u308C\u3082CallbackHandler\u306B\u3088\u3063\u3066\u30DD\u30EA\u30B7\u30FC\u306B\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093



WSS1419.unsupported.keybinding.signature=WSS1419: \u7F72\u540D\u3067\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u306A\u3044KeyBinding



WSS1420.dynamic.policy.signature=WSS1420: \u52D5\u7684\u30DD\u30EA\u30B7\u30FC\u7F72\u540D{0}\u306E\u51E6\u7406\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F


WSS1421.no.default.x509certificate.provided=WSS1421: \u30C7\u30D5\u30A9\u30EB\u30C8X509\u8A3C\u660E\u66F8\u304C\u6307\u5B9A\u3055\u308C\u307E\u305B\u3093\u3067\u3057\u305F

WSS1422.unsupported.keybinding.EncryptionPolicy=WSS1422: EncryptionPolicy\u3067\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u306A\u3044KeyBinding

WSS1423.kerberos.context.notset = WSS1423: Kerberos\u30C8\u30FC\u30AF\u30F3\u304A\u3088\u3073\u9375\u3092\u53D6\u5F97\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002Kerberos\u8A2D\u5B9A\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044\u3002

WSS1424.invalid.username.token=WSS1424: \u53D6\u5F97\u3057\u305F\u30E6\u30FC\u30B6\u30FC\u540D\u306E\u30D1\u30B9\u30EF\u30FC\u30C9\u304CNULL\u3067\u3059\u3002

WSS1425.unsupported.encoding=WSS1425: 160BitKey\u306E\u4F5C\u6210\u4E2D\u306B\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u306A\u3044\u30A8\u30F3\u30B3\u30FC\u30C7\u30A3\u30F3\u30B0\u30FB\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F

WSS1426.Base64.decoding.error=WSS1426: UsernameToken\u3067Salt\u306E\u30C7\u30B3\u30FC\u30C9\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F

# ADHOC is a constant describing a special policy (it's kind of an enum member). Should not be translated.
WSS1427.error.adhoc=WSS1427: \u5185\u90E8\u30A8\u30E9\u30FC: ADHOC\u30E2\u30FC\u30C9\u3067UsernameTokenFilter\u3092\u547C\u3073\u51FA\u3057\u307E\u3057\u305F

WSS1428.signature.confirmation.error=WSS1428: SignatureConfirmation\u8981\u7D20\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093

WSS1429.error.timestamp.internalization=WSS1429: \u30BF\u30A4\u30E0\u30B9\u30BF\u30F3\u30D7\u306E\u5185\u90E8\u5316\u306B\u5931\u6557\u3057\u307E\u3057\u305F

WSS1430.error.timestamp.validation=WSS1430: \u30BF\u30A4\u30E0\u30B9\u30BF\u30F3\u30D7\u306E\u691C\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F

WSS1431.no.saml.found=WSS1431: saml\u30C8\u30FC\u30AF\u30F3\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002\u30EC\u30B7\u30FC\u30D0\u8981\u4EF6\u3092\u6E80\u305F\u3057\u3066\u3044\u307E\u305B\u3093

WSS1432.saml.import.exception=WSS1432: SAML\u30C8\u30FC\u30AF\u30F3\u306E\u30A4\u30F3\u30DD\u30FC\u30C8\u4E2D\u306B\u4F8B\u5916\u304C\u767A\u751F\u3057\u307E\u3057\u305F

WSS1433.error.extracting.usernametoken=WSS1433: usernametoken\u306E\u62BD\u51FA\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F

WSS1434.saml.issuer.validation.failed=WSS1434: SAML\u30A2\u30B5\u30FC\u30B7\u30E7\u30F3\u306E\u767A\u884C\u8005\u691C\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F

WSS1435.signature.confirmation.validation.failure=WSS1435: SignatureConfirmation\u306E\u691C\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F

WSS1436.message.doesnot.conform.timestamp.policy=WSS1436: \u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u30BF\u30A4\u30E0\u30B9\u30BF\u30F3\u30D7\u30FB\u30DD\u30EA\u30B7\u30FC\u306B\u6E96\u62E0\u3057\u3066\u3044\u307E\u305B\u3093
