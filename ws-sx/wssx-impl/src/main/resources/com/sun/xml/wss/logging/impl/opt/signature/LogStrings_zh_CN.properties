#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# ResourceBundle properties file for optimized signature

WSS1701.sign.failed = WSS1701: \u7B7E\u540D\u64CD\u4F5C\u5931\u8D25\u3002

WSS1702.unsupported.usernametoken.keybinding = WSS1702: \u5C1A\u4E0D\u652F\u6301\u5C06 UsernameToken \u4F5C\u4E3A SignaturePolicy \u7684 KeyBinding

WSS1703.unsupported.keybinding.signaturepolicy = WSS1703: \u4E0D\u652F\u6301 SignaturePolicy \u7684\u5BC6\u94A5\u7ED1\u5B9A: {0}

WSS1704.error.resolving.id = WSS1704: \u89E3\u6790 ID \u65F6\u51FA\u9519: {0}\u3002\u53EF\u80FD\u662F\u5728 SOAP \u6D88\u606F\u4E2D\u4E0D\u5B58\u5728\u3002

WSS1705.invalid.digest.algorithm: WSS1705: \u6307\u5B9A\u4E86\u65E0\u6548\u7684\u6458\u8981\u7B97\u6CD5{0}

WSS1706.error.enveloped.signature: WSS1706: \u6267\u884C\u5C01\u88C5\u7B7E\u540D\u65F6\u51FA\u9519

WSS1707.error.processing.signedinfo: WSS1707: \u7B7E\u540D\u4E0B\u7684\u5143\u7D20\u672A\u9075\u5B88\u5B9A\u4E49\u7684\u6A21\u5F0F, \u6216\u8005\u5728\u5904\u7406 ID \u4E3A {0} \u7684\u7B7E\u540D\u7684 SignedInfo \u65F6\u80AF\u5B9A\u51FA\u73B0\u4E86\u9519\u8BEF

WSS1708.base64.decoding.error: WSS1708: \u89E3\u7801 ID \u4E3A {0} \u7684\u7B7E\u540D\u7684 signatureValue \u65F6\u51FA\u9519

WSS1709.unrecognized.signature.element: WSS1709: \u65E0\u6CD5\u8BC6\u522B\u7B7E\u540D\u4E0B\u7684\u5143\u7D20\u540D\u79F0{0}\u3002

WSS1710.signature.verfication.failed: WSS1710: ID \u4E3A {0} \u7684\u7B7E\u540D\u7684\u7B7E\u540D\u9A8C\u8BC1\u5931\u8D25

WSS1711.error.verifying.signature: WSS1711: \u8BFB\u53D6\u7B7E\u540D\u4F9B\u9A8C\u8BC1\u65F6\u51FA\u9519

WSS1712.unbuffered.signature.error: WSS1712: \u672A\u7F13\u51B2\u7B7E\u540D, \u6D88\u606F\u672A\u9075\u5B88\u914D\u7F6E\u7684\u7B56\u7565

WSS1713.signature.verification.exception: WSS1713: \u7531\u4E8E\u4EE5\u4E0B\u539F\u56E0, \u7B7E\u540D\u9A8C\u8BC1\u5931\u8D25: {0}

WSS1714.unsupported.transform.error: WSS1714: \u53EA\u652F\u6301 EXC14n \u8F6C\u6362

WSS1715.error.canonicalizing.body: WSS1715: \u89C4\u8303\u5316 BodyTag \u65F6\u51FA\u9519

WSS1716.error.dereference.str.transform: WSS1716: \u5BF9 STR-Transform \u7684\u5F15\u7528\u5143\u7D20\u89E3\u9664\u5F15\u7528\u65F6\u51FA\u9519

WSS1717.error.payload.verification: WSS1717: \u6267\u884C\u6B63\u6587/\u6709\u6548\u8D1F\u8F7D\u7684\u6458\u8981\u9A8C\u8BC1\u65F6\u51FA\u9519

WSS1718.missing.canon.algorithm: WSS1718: SignedInfo \u4E2D\u5FC5\u987B\u5B58\u5728\u89C4\u8303\u5316\u7B97\u6CD5

WSS1719.error.digestval.reference: WSS1719: \u7B7E\u540D\u5F15\u7528\u9A8C\u8BC1\u9519\u8BEF\u3002\u89E3\u7801\u4EE5\u4E0B\u5F15\u7528\u7684 digestValue \u65F6\u51FA\u9519: {0}

WSS1720.error.uri.deref: WSS1720: \u5BF9\u4EE5\u4E0B\u5F15\u7528\u89E3\u9664\u5F15\u7528\u65F6\u51FA\u9519: {0}

WSS1721.reference.validation.failed: WSS1721: URI \u4E3A {0} \u7684\u5F15\u7528\u7684\u9A8C\u8BC1\u5931\u8D25

WSS1722.error.reference.validation: WSS1722: \u9A8C\u8BC1\u5177\u6709\u4EE5\u4E0B URI \u7684\u5F15\u7528\u65F6\u51FA\u9519: {0}

WSS1723.unsupported.transform.element: WSS1723: \u4E0D\u652F\u6301\u7684\u8F6C\u6362\u5143\u7D20: {0}

# {0} - "SHA1withDSA"/"HMAC_SHA1"/"SHA1WithRSA" (algorithms)
WSS1724.sigtype.verification.failed: {0}\u7B7E\u540D\u9A8C\u8BC1\u5931\u8D25

WSS1725.reference.element.notfound: \u5728\u7B7E\u540D\u7684 SignedInfo \u4E2D\u627E\u4E0D\u5230\u5F15\u7528\u5143\u7D20

# 1750 onwards for FINEST, INFO and WARNING messages

WSS1750.uri.tobe.dereferenced = WSS1750: \u8981\u89E3\u9664\u5F15\u7528\u7684 URI: {0}

WSS1751.number.targets.signature = WSS1751: \u7B7E\u540D\u4E2D\u7684\u76EE\u6807\u6570\u4E3A: {0}\u3002

WSS1752.signature.target.value: WSS1752: \u7B7E\u540D\u76EE\u6807\u503C\u4E3A{0}

WSS1753.target.digest.algorithm: WSS1753: \u4F7F\u7528\u7684\u6458\u8981\u7B97\u6CD5\u4E3A: {0}

WSS1754.transform.algorithm: WSS1754: \u4F7F\u7528\u7684\u8F6C\u6362\u7B97\u6CD5\u4E3A: {0}

WSS1755.missingid.incoming.signature = WSS1755: \u4F20\u5165\u7B7E\u540D\u4E0D\u5B58\u5728 ID\u3002\u4E3A\u7B56\u7565\u9A8C\u8BC1\u751F\u6210\u4E86 ID: {0}

WSS1756.canonicalized.signedinfo.value = WSS1756: \u89C4\u8303\u5316\u7684\u5DF2\u7B7E\u540D\u4FE1\u606F: {0}

WSS1757.canonicalized.target.value = WSS1757: \u89C4\u8303\u5316\u7684\u76EE\u6807\u503C: {0}

WSS1758.transform.init = WSS1758: \u521D\u59CB\u5316 EXC14n \u89C4\u8303\u5316\u7A0B\u5E8F\u65F6\u51FA\u9519, \u6307\u5B9A\u7684\u7B97\u6CD5\u53C2\u6570\u65E0\u6548\u3002

WSS1759.transform.error = WSS1759: \u51FA\u73B0\u4EE5\u4E0B\u9519\u8BEF: {0} (\u5728\u6267\u884C\u89C4\u8303\u5316{0}\u65F6)

WSS1760.digest.init.error= WSS1760: \u83B7\u53D6 MessageDigest \u5B9E\u4F8B\u65F6\u51FA\u9519\u3002

WSS1761.transform.io.error = WSS1761: \u5237\u65B0\u8F93\u51FA\u6D41\u65F6\u51FA\u9519\u3002

WSS1762.calculated.digest.value = WSS1762: \u8BA1\u7B97\u7684\u6458\u8981\u503C\u4E3A: {0}

WSS1763.actual.degest.value = WSS1763: \u5B9E\u9645\u6458\u8981\u503C\u4E3A: {0}

WSS1764.canonicalized.payload.value = WSS1764: \u89C4\u8303\u5316\u7684\u6709\u6548\u8D1F\u8F7D\u4E3A: {0}

WSS1765.invalid.degest.algo = WSS1765: \u6458\u8981\u7B97\u6CD5{0}\u65E0\u6548

WSS1766.no.attachment.parts.tobe.secured = WSS1766: \u6D88\u606F\u4E2D\u4E0D\u5B58\u5728\u8981\u4FDD\u62A4\u7684\u9644\u4EF6\u90E8\u5206

## copied from impl.dsig bundle

WSS1767.error.create.transform.object = WSS1767: \u521B\u5EFA\u8F6C\u6362\u5BF9\u8C61\u65F6\u51FA\u9519

WSS1768.no.signedparts=WSS1768: \u5728\u6D88\u606F\u4E2D\u627E\u4E0D\u5230\u5DF2\u7B7E\u540D\u7684\u90E8\u5206
