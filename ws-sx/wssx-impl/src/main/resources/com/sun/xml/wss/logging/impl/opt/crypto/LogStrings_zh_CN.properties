#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# ResourceBundle properties file for optimized encryption

WSS1902.unsupported.usernametoken.keybinding = WSS1902: \u5C1A\u4E0D\u652F\u6301\u5C06 UsernameToken \u4F5C\u4E3A EncryptionPolicy \u7684 KeyBinding

WSS1903.unsupported.keybinding.encryptionpolicy = WSS1903: \u4E0D\u652F\u6301 EncryptionPolicy \u7684\u5BC6\u94A5\u7ED1\u5B9A: {0}

WSS1904.unsupported.keyencryption.algorithm = WSS1904: \u7531\u4E8E\u5BC6\u94A5\u52A0\u5BC6\u4E0D\u652F\u6301{0}\u7B97\u6CD5, \u65E0\u6CD5\u8BA1\u7B97\u5BC6\u7801\u503C/\u89E3\u5BC6\u5BC6\u94A5

WSS1905.error.initializing.cipher = WSS1905: \u521D\u59CB\u5316\u5BC6\u7801\u65F6\u51FA\u9519\u3002\u51FA\u73B0\u586B\u5145\u9519\u8BEF\u3002

WSS1906.invalid.key.error = WSS1906: \u4E3A\u52A0\u5BC6/\u89E3\u5BC6\u63D0\u4F9B\u7684\u5BC6\u94A5\u65E0\u6548\u3002

WSS1907.incorrect.block.size = WSS1907: \u5185\u90E8\u9519\u8BEF\u3002\u51FA\u73B0\u4E0D\u6B63\u786E\u7684\u5757\u5927\u5C0F\u5F02\u5E38\u9519\u8BEF

WSS1908.error.writing.encrypteddata = WSS1908: \u5199\u5165\u52A0\u5BC6\u6570\u636E\u65F6\u51FA\u9519

WSS1909.unsupported.dataencryption.algorithm = WSS1909: \u7531\u4E8E\u6570\u636E\u52A0\u5BC6\u4E0D\u652F\u6301{0}\u7B97\u6CD5, \u65E0\u6CD5\u8BA1\u7B97\u5BC6\u7801\u503C/\u89E3\u5BC6\u6570\u636E

WSS1910.error.writing.namespaces.canonicalizer = WSS1910: \u65E0\u6CD5\u5C06\u540D\u79F0\u7A7A\u95F4\u5199\u5165\u4E13\u6709\u89C4\u8303\u5316\u7A0B\u5E8F: {0}

WSS1911.error.writing.ciphervalue = WSS1911: \u7531\u4E8E\u4EE5\u4E0B\u539F\u56E0, \u65E0\u6CD5\u8BA1\u7B97\u5BC6\u7801\u503C: {0}

WSS1912.decryption.algorithm.null = WSS1912: \u5728\u4E0D\u77E5\u9053\u7B97\u6CD5\u7684\u60C5\u51B5\u4E0B, \u65E0\u6CD5\u5BF9\u5BC6\u94A5\u8FDB\u884C\u89E3\u5BC6

WSS1913.decryption.key.null = WSS1913: \u7528\u4E8E\u89E3\u5BC6 EncryptedKey \u7684\u5BC6\u94A5\u4E0D\u80FD\u4E3A\u7A7A\u503C

WSS1914.invalid.cipher.mode = WSS1914: \u65E0\u6548\u7684\u5BC6\u7801\u6A21\u5F0F: {0}

WSS1915.invalid.algorithm.parameters = WSS1915: \u89E3\u5BC6\u6570\u636E\u65F6\u51FA\u9519\u3002\u7B97\u6CD5{0}\u7684\u7B97\u6CD5\u53C2\u6570\u65E0\u6548

WSS1916.error.writing.ecryptedheader = WSS1916: \u5199\u5165 EncryptedHeader \u65F6\u51FA\u9519: {0}

WSS1917.crlf.init.failed = WSS1917: \u521D\u59CB\u5316\u5185\u90E8\u7F13\u51B2\u533A\u65F6\u51FA\u9519\u3002

WSS1918.illegal.encryption.target = WSS1918: \u975E\u6CD5\u7684\u52A0\u5BC6\u76EE\u6807: URI - {0}, \u5143\u7D20 - {1}

WSS1919.error.writing.encrypteddata = WSS1919: \u5199\u5165 EncryptedData \u65F6\u51FA\u9519: {0}

WSS1920.error.calculating.ciphervalue = WSS1920: \u8BA1\u7B97\u5BC6\u7801\u503C\u65F6\u51FA\u9519

WSS1921.error.writing.encryptedkey = WSS1921: \u5199\u5165 EncryptedKey \u65F6\u51FA\u9519: {0}

WSS1922.error.decoding.cipherval = WSS1922: \u89E3\u7801 CipherValue \u65F6\u51FA\u9519: {0}

WSS1923.error.processing.cipherval = WSS1923: \u5904\u7406 CipherValue \u65F6\u51FA\u9519: {0}

WSS1924.cipherval.missingin.cipherdata = WSS1925: \u5728 CipherData \u4E2D\u627E\u4E0D\u5230 CipherValue

WSS1925.empty.encmethod.ed = WSS1925: \u4E0D\u5141\u8BB8\u7A7A\u52A0\u5BC6\u65B9\u6CD5

WSS1926.ed.key.notset = WSS1926: \u6CA1\u6709\u4E3A EncryptedData \u8BBE\u7F6E\u5BC6\u94A5

# {0} - "EncryptedData"/"EncryptedKey"
WSS1927.error.decrypt.ed = WSS1927: \u89E3\u5BC6{0}\u65F6\u51FA\u9519

WSS1928.unrecognized.ciphertext.transform = WSS1928: \u65E0\u6CD5\u8BC6\u522B\u7684\u5BC6\u6587\u8F6C\u6362\u7B97\u6CD5: {0}

# 1950 onwards for FINEST, INFO and WARNING messages

WSS1950.dataencryption.algorithm.notset = WSS1950: \u65E0\u6CD5\u4ECE\u7B97\u6CD5\u5957\u4EF6\u83B7\u53D6 DataEncryption \u7B97\u6CD5\u3002\u4F7F\u7528\u9ED8\u8BA4 Triple Des \u7B97\u6CD5

WSS1951.encrypted.data.value = WSS1951: \u5DF2\u52A0\u5BC6\u6570\u636E\u4E3A: {0}

WSS1952.encryption.keybinding.value = WSS1952: \u52A0\u5BC6\u4E2D\u7684 KeyBinding \u4E3A: {0}
