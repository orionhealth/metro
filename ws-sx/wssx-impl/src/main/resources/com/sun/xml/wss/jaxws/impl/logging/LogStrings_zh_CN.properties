#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#Logging Error codes

#### Errors and exceptions (1-1000)
WSSPIPE0001.problem.mar.unmar=WSSPIPE001: \u4ECE JAXBContext \u521B\u5EFA JAXB \u7F16\u96C6\u5668/\u89E3\u7F16\u96C6\u5668\u65F6\u51FA\u73B0\u95EE\u9898\u3002\u8BF7\u68C0\u67E5 JAXBcontext \u662F\u5426\u5DF2\u6B63\u786E\u521D\u59CB\u5316\u3002

WSSPIPE0002.internal.server.error=WSSPIPE0002: \u5B89\u5168\u7BA1\u9053: \u5C1D\u8BD5\u521B\u5EFA SOAPFault \u65F6\u51FA\u73B0\u5185\u90E8\u9519\u8BEF\u3002

WSSPIPE0003.problem.printing.msg=WSSPIPE003: \u5C1D\u8BD5\u6253\u5370 SOAP \u6D88\u606F\u65F6\u51FA\u9519\u3002\u53EF\u80FD\u662F\u6D88\u606F\u4E2D XML \u7684\u8BED\u6CD5\u5408\u6CD5\u6027\u5B58\u5728\u95EE\u9898\u3002

WSSPIPE0004.opt.path.not.yet.supported=WSSPIPE0004: \u4F18\u5316\u8DEF\u5F84\u5C1A\u4E0D\u652F\u6301\u6545\u969C\u7B56\u7565\u9A8C\u8BC1\u3002

WSSPIPE0005.problem.proc.soap.message=WSSPIPE0005: \u5B89\u5168\u7BA1\u9053: \u5C06 JAXWS \u6D88\u606F\u8F6C\u6362\u4E3A SAAJ SOAP \u6D88\u606F\u65F6\u51FA\u9519\u3002

WSSPIPE0006.problem.init.out.proc.context=WSSPIPE0006: \u5B89\u5168\u7BA1\u9053: \u521D\u59CB\u5316\u4F20\u51FA\u5B89\u5168\u5904\u7406\u4E0A\u4E0B\u6587\u65F6\u51FA\u73B0\u5185\u90E8\u9519\u8BEF\u3002

WSSPIPE0007.problem.getting.eff.boot.policy=WSSPIPE0007: \u5B89\u5168\u7BA1\u9053: \u5C1D\u8BD5\u83B7\u53D6\u6709\u6548 SecureConversation \u5F15\u5BFC\u7B56\u7565\u65F6\u51FA\u9519\u3002

WSSPIPE0008.problem.building.protocol.policy=WSSPIPE0008: \u5B89\u5168\u7BA1\u9053: \u5C1D\u8BD5\u4E3A\u534F\u8BAE\u6D88\u606F\u6784\u5EFA\u6709\u6548\u5B89\u5168\u7B56\u7565\u65F6\u51FA\u9519\u3002

WSSPIPE0009.unsupported.callback.type.encountered=WSSPIPE0009: \u9047\u5230\u4E0D\u652F\u6301\u7684\u56DE\u8C03\u7C7B\u578B{0}\u3002

WSSPIPE0010.unknown.validator.type.config=WSSPIPE0010: \u914D\u7F6E\u65AD\u8A00\u4E2D\u5B58\u5728\u672A\u77E5\u7684\u9A8C\u8BC1\u5668\u7C7B\u578B{0}\u3002

WSSPIPE0011.could.not.find.user.class=WSSPIPE0011: \u627E\u4E0D\u5230\u7528\u6237\u7C7B: {0}\u3002

WSSPIPE0012.problem.checking.reliable.message.enable=WSSPIPE0012: \u5185\u90E8\u9519\u8BEF: \u65E0\u6CD5\u68C0\u6D4B\u662F\u5426\u542F\u7528\u4E86\u53EF\u9760\u6D88\u606F\u4F20\u9001\u3002

WSSPIPE0013.sec.policy.not.configured=WSSPIPE0013: \u6CA1\u6709\u4E3A\u64CD\u4F5C{0}\u914D\u7F6E SecurityPolicy, \u4F46\u627E\u5230\u4E86 SecurityHeader\u3002

WSSPIPE0014.keystore.url.null.config.assertion=WSSPIPE0014: \u4ECE ConfigAssertion \u83B7\u53D6\u7684\u5BC6\u94A5\u5E93 URL \u4E3A\u7A7A\u503C\u3002

WSSPIPE0015.keystore.password.null.config.assertion=WSSPIPE0015: \u4ECE ConfigAssertion \u83B7\u53D6\u7684\u5BC6\u94A5\u5E93\u53E3\u4EE4\u4E3A\u7A7A\u503C\u3002

WSSPIPE0016.truststore.url.null.config.assertion=WSSPIPE0016: \u4ECE ConfigAssertion \u83B7\u53D6\u7684 TrustStore URL \u4E3A\u7A7A\u503C\u3002

WSSPIPE0017.truststore.password.null.config.assertion=WSSPIPE0017: \u4ECE ConfigAssertion \u83B7\u53D6\u7684 TrustStore \u53E3\u4EE4\u4E3A\u7A7A\u503C\u3002

WSSPIPE0018.null.or.empty.xwss.callback.handler.classname=WSSPIPE0018: \u4E3A xwssCallbackHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A\u3002

WSSPIPE0019.null.or.empty.username.handler.classname=WSSPIPE0019: \u4E3A usernameHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A\u3002

WSSPIPE0020.null.or.empty.password.handler.classname=WSSPIPE0020: \u4E3A passwordHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A\u3002

WSSPIPE0021.null.or.empty.saml.handler.classname=WSSPIPE0021: \u4E3A samlHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A

# {0} - validator name
WSSPIPE0022.null.or.empty.validator.classname=WSSPIPE0022: \u4E3A{0}\u8BBE\u7F6E\u7684\u9A8C\u8BC1\u5668\u7C7B\u540D\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A

WSSPIPE0023.error.creating.new.instance.sec.client.pipe=WSSPIPE0023: \u521B\u5EFA SecurityClientPipe \u7684\u65B0\u5B9E\u4F8B\u65F6\u51FA\u9519

WSSPIPE0024.error.securing.outbound.msg=WSSPIPE0024: \u4FDD\u62A4\u51FA\u7AD9\u6D88\u606F\u65F6\u51FA\u9519\u3002

WSSPIPE0025.error.verify.inbound.msg=WSSPIPE0025: \u9A8C\u8BC1\u5165\u7AD9\u6D88\u606F\u4E2D\u7684\u5B89\u5168\u6027\u65F6\u51FA\u9519\u3002

WSSPIPE0026.no.policy.found.for.sc=WSSPIPE0026: \u65E0\u6CD5\u542F\u52A8 SecureConversation, \u5728\u7B56\u7565\u4E2D\u627E\u4E0D\u5230 SecureConversation \u65AD\u8A00\u3002

WSSPIPE0027.error.configure.client.handler=WSSPIPE0027: \u914D\u7F6E\u5BA2\u6237\u673A\u5B89\u5168\u56DE\u8C03\u5904\u7406\u7A0B\u5E8F\u65F6\u51FA\u9519\u3002

WSSPIPE0028.error.creating.new.instance.sec.server.pipe=WSSPIPE0028: \u521B\u5EFA SecurityServerPipe \u7684\u65B0\u5B9E\u4F8B\u65F6\u51FA\u9519

WSSPIPE0029.error.session.creation=WSSPIPE0029: \u65E0\u6CD5\u4F7F\u7528 RST-SCT \u53D1\u5E03\u8BF7\u6C42\u521B\u5EFA\u5B89\u5168\u4F1A\u8BDD\u3002

WSSPIPE0030.unsupported.operation.exception=WSSPIPE0030: \u521B\u5EFA\u5B89\u5168\u4F1A\u8BDD\u65F6\u4E0D\u652F\u6301\u4F7F\u7528 RequestType: {0}\u3002

WSSPIPE0031.error.invoke.sc.contract=WSSPIPE0031: \u8C03\u7528\u5B89\u5168\u4F1A\u8BDD\u5408\u540C\u65F6\u51FA\u9519\u3002

WSSPIPE0032.error.configure.server.handler=WSSPIPE0027: \u914D\u7F6E\u670D\u52A1\u5668\u5B89\u5168\u56DE\u8C03\u5904\u7406\u7A0B\u5E8F\u65F6\u51FA\u9519\u3002

WSSPIPE0033.invalid.callback.handler.class=WSSPIPE0033: \u6307\u5B9A\u7684 CallbackHandler \u7C7B{0}\u4E0D\u662F\u6709\u6548\u7684 javax.security.auth.callback.CallbackHandler

WSSPIPE0034.faulty.response.msg=WSSPIPE0034: \u5BA2\u6237\u673A\u5E94\u7528\u7A0B\u5E8F\u6536\u5230\u4E86 SOAP \u6545\u969C: {0}\u3002

WSSPIPE0035.error.issuedtoken.creation=WSSPIPE0035: \u5728\u521B\u5EFA IssuedToken \u671F\u95F4\u6536\u5230\u5F02\u5E38\u9519\u8BEF\u3002

#### Info, Fine and Warning messages ####
#### Codes starting from 1000+


# For Tubes

#Logging Error codes

#### Errors and exceptions (1-1000)
WSSTUBE0001.problem.mar.unmar=WSSTUBE001: \u4ECE JAXBContext \u521B\u5EFA JAXB \u7F16\u96C6\u5668/\u89E3\u7F16\u96C6\u5668\u65F6\u51FA\u73B0\u95EE\u9898\u3002\u8BF7\u68C0\u67E5 JAXBcontext \u662F\u5426\u5DF2\u6B63\u786E\u521D\u59CB\u5316\u3002

WSSTUBE0002.internal.server.error=WSSTUBE0002: \u5B89\u5168\u7BA1\u7EBF: \u5C1D\u8BD5\u521B\u5EFA SOAPFault \u65F6\u51FA\u73B0\u5185\u90E8\u9519\u8BEF\u3002

WSSTUBE0003.problem.printing.msg=WSSTUBE003: \u5C1D\u8BD5\u6253\u5370 SOAP \u6D88\u606F\u65F6\u51FA\u9519\u3002\u53EF\u80FD\u662F\u6D88\u606F\u4E2D XML \u7684\u8BED\u6CD5\u5408\u6CD5\u6027\u5B58\u5728\u95EE\u9898\u3002

WSSTUBE0004.opt.path.not.yet.supported=WSSTUBE0004: \u4F18\u5316\u8DEF\u5F84\u5C1A\u4E0D\u652F\u6301\u6545\u969C\u7B56\u7565\u9A8C\u8BC1\u3002

WSSTUBE0005.problem.proc.soap.message=WSSTUBE0005: \u5B89\u5168\u7BA1\u7EBF: \u5C06 JAXWS \u6D88\u606F\u8F6C\u6362\u4E3A SAAJ SOAP \u6D88\u606F\u65F6\u51FA\u9519\u3002

WSSTUBE0006.problem.init.out.proc.context=WSSTUBE0006: \u5B89\u5168\u7BA1\u7EBF: \u521D\u59CB\u5316\u4F20\u51FA\u5B89\u5168\u5904\u7406\u4E0A\u4E0B\u6587\u65F6\u51FA\u73B0\u5185\u90E8\u9519\u8BEF\u3002

WSSTUBE0007.problem.getting.eff.boot.policy=WSSTUBE0007: \u5B89\u5168\u7BA1\u7EBF: \u5C1D\u8BD5\u83B7\u53D6\u6709\u6548 SecureConversation \u5F15\u5BFC\u7B56\u7565\u65F6\u51FA\u9519\u3002

WSSTUBE0008.problem.building.protocol.policy=WSSTUBE0008: \u5B89\u5168\u7BA1\u7EBF: \u5C1D\u8BD5\u4E3A\u534F\u8BAE\u6D88\u606F\u6784\u5EFA\u6709\u6548\u5B89\u5168\u7B56\u7565\u65F6\u51FA\u9519\u3002

WSSTUBE0009.unsupported.callback.type.encountered=WSSTUBE0009: \u9047\u5230\u4E0D\u652F\u6301\u7684\u56DE\u8C03\u7C7B\u578B{0}\u3002

WSSTUBE0010.unknown.validator.type.config=WSSTUBE0010: \u914D\u7F6E\u65AD\u8A00\u4E2D\u5B58\u5728\u672A\u77E5\u7684\u9A8C\u8BC1\u5668\u7C7B\u578B{0}\u3002

WSSTUBE0011.could.not.find.user.class=WSSTUBE0011: \u627E\u4E0D\u5230\u7528\u6237\u7C7B: {0}\u3002

WSSTUBE0012.problem.checking.reliable.message.enable=WSSTUBE0012: \u5185\u90E8\u9519\u8BEF: \u65E0\u6CD5\u68C0\u6D4B\u662F\u5426\u542F\u7528\u4E86\u53EF\u9760\u6D88\u606F\u4F20\u9001\u3002

WSSTUBE0013.sec.policy.not.configured=WSSTUBE0013: \u6CA1\u6709\u4E3A\u64CD\u4F5C{0}\u914D\u7F6E SecurityPolicy, \u4F46\u627E\u5230\u4E86 SecurityHeader\u3002

WSSTUBE0014.keystore.url.null.config.assertion=WSSTUBE0014: \u4ECE ConfigAssertion \u83B7\u53D6\u7684\u5BC6\u94A5\u5E93 URL \u4E3A\u7A7A\u503C\u3002

WSSTUBE0015.keystore.password.null.config.assertion=WSSTUBE0015: \u4ECE ConfigAssertion \u83B7\u53D6\u7684\u5BC6\u94A5\u5E93\u53E3\u4EE4\u4E3A\u7A7A\u503C\u3002

WSSTUBE0016.truststore.url.null.config.assertion=WSSTUBE0016: \u4ECE ConfigAssertion \u83B7\u53D6\u7684 TrustStore URL \u4E3A\u7A7A\u503C\u3002

WSSTUBE0017.truststore.password.null.config.assertion=WSSTUBE0017: \u4ECE ConfigAssertion \u83B7\u53D6\u7684 TrustStore \u53E3\u4EE4\u4E3A\u7A7A\u503C\u3002

WSSTUBE0018.null.or.empty.xwss.callback.handler.classname=WSSTUBE0018: \u4E3A xwssCallbackHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A\u3002

WSSTUBE0019.null.or.empty.username.handler.classname=WSSTUBE0019: \u4E3A usernameHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A\u3002

WSSTUBE0020.null.or.empty.password.handler.classname=WSSTUBE0020: \u4E3A passwordHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A\u3002

WSSTUBE0021.null.or.empty.saml.handler.classname=WSSTUBE0021: \u4E3A samlHandler \u7C7B\u540D\u6307\u5B9A\u7684\u503C\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A

# {0} - validator name
WSSTUBE0022.null.or.empty.validator.classname=WSSTUBE0022: \u4E3A{0}\u8BBE\u7F6E\u7684\u9A8C\u8BC1\u5668\u7C7B\u540D\u4E3A\u7A7A\u503C\u6216\u4E3A\u7A7A

WSSTUBE0023.error.creating.new.instance.sec.client.tube=WSSTUBE0023: \u521B\u5EFA SecurityClientTube \u7684\u65B0\u5B9E\u4F8B\u65F6\u51FA\u9519

WSSTUBE0024.error.securing.outbound.msg=WSSTUBE0024: \u4FDD\u62A4\u51FA\u7AD9\u6D88\u606F\u65F6\u51FA\u9519\u3002

WSSTUBE0025.error.verify.inbound.msg=WSSTUBE0025: \u9A8C\u8BC1\u5165\u7AD9\u6D88\u606F\u4E2D\u7684\u5B89\u5168\u6027\u65F6\u51FA\u9519\u3002

WSSTUBE0026.no.policy.found.for.sc=WSSTUBE0026: \u65E0\u6CD5\u542F\u52A8 SecureConversation, \u5728\u7B56\u7565\u4E2D\u627E\u4E0D\u5230 SecureConversation \u65AD\u8A00\u3002

WSSTUBE0027.error.configure.client.handler=WSSTUBE0027: \u914D\u7F6E\u5BA2\u6237\u673A\u5B89\u5168\u56DE\u8C03\u5904\u7406\u7A0B\u5E8F\u65F6\u51FA\u9519\u3002

WSSTUBE0028.error.creating.new.instance.sec.server.tube=WSSTUBE0028: \u521B\u5EFA SecurityServerTube \u7684\u65B0\u5B9E\u4F8B\u65F6\u51FA\u9519

WSSTUBE0029.error.session.creation=WSSTUBE0029: \u65E0\u6CD5\u4F7F\u7528 RST-SCT \u53D1\u5E03\u8BF7\u6C42\u521B\u5EFA\u5B89\u5168\u4F1A\u8BDD\u3002

WSSTUBE0030.unsupported.operation.exception=WSSTUBE0030: \u521B\u5EFA\u5B89\u5168\u4F1A\u8BDD\u65F6\u4E0D\u652F\u6301 RequestType: {0}\u3002

WSSTUBE0031.error.invoke.sc.contract=WSSTUBE0031: \u8C03\u7528\u5B89\u5168\u4F1A\u8BDD\u5408\u540C\u65F6\u51FA\u9519\u3002

WSSTUBE0032.error.configure.server.handler=WSSTUBE0027: \u914D\u7F6E\u670D\u52A1\u5668\u5B89\u5168\u56DE\u8C03\u5904\u7406\u7A0B\u5E8F\u65F6\u51FA\u9519\u3002

WSSTUBE0033.invalid.callback.handler.class=WSSTUBE0033: \u6307\u5B9A\u7684 CallbackHandler \u7C7B{0}\u4E0D\u662F\u6709\u6548\u7684 javax.security.auth.callback.CallbackHandler

WSSTUBE0034.faulty.response.msg=WSSTUBE0034: \u5BA2\u6237\u673A\u5E94\u7528\u7A0B\u5E8F\u6536\u5230\u4E86 SOAP \u6545\u969C: {0}\u3002

WSSTUBE0035.error.issuedtoken.creation=WSSTUBE0035: \u5728\u521B\u5EFA IssuedToken \u671F\u95F4\u6536\u5230\u5F02\u5E38\u9519\u8BEF\u3002

WSSTUBE0036.error.instatiate.webservice.context.delegate=WSSTUBE: \u5B9E\u4F8B\u5316 Web \u670D\u52A1\u4E0A\u4E0B\u6587\u59D4\u6D3E\u671F\u95F4\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF

#### Info, Fine and Warning messages ####
#### Codes starting from 1000+
