#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# ResourceBundle properties file for optimized encryption

WSS1902.unsupported.usernametoken.keybinding = WSS1902: \u5C1A\u4E0D\u652F\u63F4\u5C07 UsernameToken \u4F5C\u70BA EncryptionPolicy \u7684 KeyBinding

WSS1903.unsupported.keybinding.encryptionpolicy = WSS1903: \u4E0D\u652F\u63F4\u7684 EncryptionPolicy \u91D1\u9470\u9023\u7D50: {0}

WSS1904.unsupported.keyencryption.algorithm = WSS1904: \u7121\u6CD5\u8A08\u7B97\u52A0\u5BC6\u503C/\u89E3\u5BC6\u91D1\u9470, \u56E0\u70BA\u91D1\u9470\u52A0\u5BC6\u4E0D\u652F\u63F4 {0} \u6F14\u7B97\u6CD5

WSS1905.error.initializing.cipher = WSS1905: \u8D77\u59CB\u52A0\u5BC6\u6642\u767C\u751F\u932F\u8AA4. \u767C\u751F\u586B\u88DC\u932F\u8AA4.

WSS1906.invalid.key.error = WSS1906: \u63D0\u4F9B\u7D66\u52A0\u5BC6/\u89E3\u5BC6\u7684\u91D1\u9470\u7121\u6548.

WSS1907.incorrect.block.size = WSS1907: \u5167\u90E8\u932F\u8AA4. \u767C\u751F\u5340\u584A\u5927\u5C0F\u4E0D\u6B63\u78BA\u7570\u5E38\u72C0\u6CC1.

WSS1908.error.writing.encrypteddata = WSS1908: \u5BEB\u5165\u52A0\u5BC6\u7684\u8CC7\u6599\u6642\u767C\u751F\u932F\u8AA4

WSS1909.unsupported.dataencryption.algorithm = WSS1909: \u7121\u6CD5\u8A08\u7B97\u52A0\u5BC6\u503C/\u89E3\u5BC6\u8CC7\u6599, \u56E0\u70BA\u8CC7\u6599\u52A0\u5BC6\u4E0D\u652F\u63F4 {0} \u6F14\u7B97\u6CD5

WSS1910.error.writing.namespaces.canonicalizer = WSS1910: \u7121\u6CD5\u5C07\u547D\u540D\u7A7A\u9593\u5BEB\u5165\u5C08\u6709\u6B63\u898F\u5316\u7A0B\u5F0F: {0}

WSS1911.error.writing.ciphervalue = WSS1911: \u7121\u6CD5\u8A08\u7B97\u52A0\u5BC6\u503C, \u539F\u56E0: {0}

WSS1912.decryption.algorithm.null = WSS1912: \u7121\u6CD5\u5728\u4E0D\u77E5\u9053\u6F14\u7B97\u6CD5\u7684\u60C5\u6CC1\u4E0B\u89E3\u5BC6\u91D1\u9470

WSS1913.decryption.key.null = WSS1913: \u7528\u4F86\u89E3\u5BC6 EncryptedKey \u7684\u91D1\u9470\u4E0D\u53EF\u70BA\u7A7A\u503C

WSS1914.invalid.cipher.mode = WSS1914: \u7121\u6548\u7684\u300C\u52A0\u5BC6\u300D\u6A21\u5F0F: {0}

WSS1915.invalid.algorithm.parameters = WSS1915: \u89E3\u5BC6\u8CC7\u6599\u6642\u767C\u751F\u932F\u8AA4. \u6F14\u7B97\u6CD5 {0} \u7684\u6F14\u7B97\u6CD5\u53C3\u6578\u7121\u6548.

WSS1916.error.writing.ecryptedheader = WSS1916: \u5BEB\u5165 EncryptedHeader \u6642\u767C\u751F\u932F\u8AA4: {0}

WSS1917.crlf.init.failed = WSS1917: \u8D77\u59CB\u5167\u90E8\u7DE9\u885D\u5340\u6642\u767C\u751F\u932F\u8AA4.

WSS1918.illegal.encryption.target = WSS1918: \u7121\u6548\u7684\u52A0\u5BC6\u76EE\u6A19: URI - {0}, \u5143\u7D20 - {1}

WSS1919.error.writing.encrypteddata = WSS1919: \u5BEB\u5165 EncryptedData \u6642\u767C\u751F\u932F\u8AA4: {0}

WSS1920.error.calculating.ciphervalue = WSS1920: \u8A08\u7B97\u300C\u52A0\u5BC6\u503C\u300D\u6642\u767C\u751F\u932F\u8AA4

WSS1921.error.writing.encryptedkey = WSS1921: \u5BEB\u5165 EncryptedKey \u6642\u767C\u751F\u932F\u8AA4: {0}

WSS1922.error.decoding.cipherval = WSS1922: \u89E3\u78BC CipherValue \u6642\u767C\u751F\u932F\u8AA4: {0}

WSS1923.error.processing.cipherval = WSS1923: \u8655\u7406 CipherValue \u6642\u767C\u751F\u932F\u8AA4: {0}

WSS1924.cipherval.missingin.cipherdata = WSS1925: \u5728 CipherData \u4E2D\u627E\u4E0D\u5230 CipherValue

WSS1925.empty.encmethod.ed = WSS1925: \u4E0D\u5141\u8A31\u4F7F\u7528\u7A7A\u767D\u7684\u300C\u52A0\u5BC6\u300D\u65B9\u6CD5

WSS1926.ed.key.notset = WSS1926: \u672A\u8A2D\u5B9A EncryptedData \u7684\u91D1\u9470

# {0} - "EncryptedData"/"EncryptedKey"
WSS1927.error.decrypt.ed = WSS1927: \u89E3\u5BC6 {0} \u6642\u767C\u751F\u932F\u8AA4

WSS1928.unrecognized.ciphertext.transform = WSS1928: \u7121\u6CD5\u8FA8\u8B58\u7684\u300C\u5BC6\u78BC\u6587\u5B57\u300D\u8F49\u63DB\u6F14\u7B97\u6CD5: {0}

# 1950 onwards for FINEST, INFO and WARNING messages

WSS1950.dataencryption.algorithm.notset = WSS1950: \u7121\u6CD5\u5F9E\u6F14\u7B97\u6CD5\u5957\u4EF6\u53D6\u5F97\u300CDataEncryption \u6F14\u7B97\u6CD5\u300D. \u4F7F\u7528\u9810\u8A2D\u7684 Triple Des \u6F14\u7B97\u6CD5.

WSS1951.encrypted.data.value = WSS1951: \u52A0\u5BC6\u7684\u8CC7\u6599\u70BA: {0}

WSS1952.encryption.keybinding.value = WSS1952: \u52A0\u5BC6\u4E2D\u7684 KeyBinding \u70BA: {0}
