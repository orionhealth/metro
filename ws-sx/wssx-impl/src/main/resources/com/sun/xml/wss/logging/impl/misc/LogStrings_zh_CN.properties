#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

WSS1500.invalid.usernameHandler=WSS1500: \u6CA1\u6709\u4F7F\u7528\u56DE\u8C03\u6B63\u786E\u914D\u7F6E\u7528\u6237\u540D\u5904\u7406\u7A0B\u5E8F, \u7528\u6237\u540D\u5904\u7406\u7A0B\u5E8F\u4E3A\u7A7A\u503C\u3002(\u672A\u914D\u7F6E)

WSS1501.no.password.validator=WSS1501: \u672A\u5728\u914D\u7F6E\u4E2D\u6307\u5B9A\u53E3\u4EE4\u9A8C\u8BC1\u5668

WSS1502.unsupported.digestAuth=WSS1502: \u4E0D\u652F\u6301\u53E3\u4EE4\u8BF7\u6C42\u7684\u6458\u8981\u9A8C\u8BC1

WSS1503.unsupported.requesttype=WSS1503: \u4E0D\u652F\u6301\u7684\u53E3\u4EE4\u9A8C\u8BC1\u8BF7\u6C42\u7C7B\u578B

WSS1504.unsupported.callbackType=WSS1504: \u9047\u5230\u4E0D\u652F\u6301\u7684\u56DE\u8C03\u7C7B\u578B

WSS1505.failedto.getkey=WSS1505: \u51FA\u73B0 IO \u5F02\u5E38\u9519\u8BEF: \u65E0\u6CD5\u4ECE\u5BC6\u94A5\u5E93\u83B7\u53D6\u5BC6\u94A5/\u8BC1\u4E66 (\u4E0D\u4E00\u5B9A\u662F I/O \u5F02\u5E38\u9519\u8BEF)

WSS1506.invalid.SAMLPolicy=WSS1506: \u7B56\u7565\u4E2D\u4E0D\u5B58\u5728 SAML \u65AD\u8A00\u3002

WSS1507.no.SAMLCallbackHandler=WSS1507: \u914D\u7F6E\u4E2D\u672A\u6307\u5B9A\u5FC5\u9700\u7684 SAML \u56DE\u8C03\u5904\u7406\u7A0B\u5E8F: \u65E0\u6CD5\u586B\u5145 SAML \u65AD\u8A00

WSS1508.failed.validateSAMLAssertion=WSS1508: \u65E0\u6CD5\u9A8C\u8BC1 SAML \u65AD\u8A00

WSS1509.failed.init.truststore=WSS1509: \u65E0\u6CD5\u521D\u59CB\u5316 TrustStore

WSS1510.failed.init.keystore=WSS1510: \u65E0\u6CD5\u521D\u59CB\u5316\u5BC6\u94A5\u5E93

# PEER is an alias name for the certificate. Should not be translated.
WSS1511.failed.locate.peerCertificate=WSS1511: \u5728 TrustStore \u4E2D\u67E5\u627E PEER \u5B9E\u4F53\u8BC1\u4E66\u65F6\u51FA\u9519\u3002

WSS1512.failed.locate.certificate.privatekey=WSS1512: \u5728\u5BC6\u94A5\u5E93\u4E2D\u67E5\u627E\u9ED8\u8BA4\u8BC1\u4E66\u548C\u79C1\u6709\u5BC6\u94A5\u65F6\u51FA\u9519\u3002

WSS1513.exception.validate.timestamp=WSS1513: \u65F6\u95F4\u6233\u9A8C\u8BC1\u4E2D\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF\u3002\u5C06 UTC \u65F6\u95F4\u6233\u89E3\u6790\u4E3A\u65E5\u671F\u683C\u5F0F\u65F6\u51FA\u9519\u3002

WSS1514.error.aheadCurrentTime=WSS1514: \u5F53\u524D\u65F6\u95F4\u65E9\u4E8E\u65F6\u95F4\u6233\u4E2D\u7684\u5931\u6548\u65F6\u95F4"

WSS1515.error.currentTime=WSS1515: \u521B\u5EFA\u65F6\u95F4\u65E9\u4E8E currenttime - timestamp-freshness-limit - max-clock-skew"

WSS1516.error.creationAheadCurrent.time=WSS1516: \u521B\u5EFA\u65F6\u95F4\u65E9\u4E8E\u5F53\u524D\u65F6\u95F4

WSS1517.X509.expired=WSS1517: X509Certificate \u5DF2\u8FC7\u671F\u3002

WSS1518.failedto.validate.certificate=WSS1518: \u65E0\u6CD5\u9A8C\u8BC1\u8BC1\u4E66

WSS1519.no.digest.algorithm=WSS1519: \u627E\u4E0D\u5230\u6458\u8981\u7B97\u6CD5 SHA-1

WSS1520.error.getting.rawContent=WSS1520: \u83B7\u53D6\u8BC1\u4E66\u539F\u59CB\u5185\u5BB9\u65F6\u51FA\u9519

WSS1521.error.getting.userClass=WSS1512: \u627E\u4E0D\u5230\u7528\u6237\u7C7B

WSS1522.error.getting.longValue=WSS1522: \u83B7\u53D6\u957F\u6574\u578B\u503C\u65F6\u51FA\u9519

WSS1523.error.getting.newInstance.CallbackHandler=WSS1523: \u83B7\u53D6\u56DE\u8C03\u5904\u7406\u7A0B\u5E8F\u7684\u65B0\u5B9E\u4F8B\u65F6\u51FA\u9519

WSS1524.unableto.resolve.URI.WSIT_HOME.notset=WSS1524: \u7531\u4E8E\u672A\u8BBE\u7F6E\u7CFB\u7EDF\u5C5E\u6027 WSIT_HOME, \u65E0\u6CD5\u89E3\u6790 WSDL \u4E2D\u7684\u6307\u5B9A\u914D\u7F6E URL

WSS1525.invalid.passwordHandler=WSS1525: \u6CA1\u6709\u4F7F\u7528\u56DE\u8C03\u6B63\u786E\u914D\u7F6E\u53E3\u4EE4\u5904\u7406\u7A0B\u5E8F, \u53E3\u4EE4\u5904\u7406\u7A0B\u5E8F\u4E3A\u7A7A\u503C\u3002(\u672A\u914D\u7F6E)

WSS1526.failedto.getcertificate=WSS1526: \u51FA\u73B0 IO \u5F02\u5E38\u9519\u8BEF: \u65E0\u6CD5\u4ECE TrustStore \u83B7\u53D6\u8BC1\u4E66

WSS1527.X509.notValid=WSS1527: X509Certificate \u7684\u6709\u6548\u6027\u5931\u8D25\u3002

WSS1528.failed.initialize.key.password=WSS1528: \u83B7\u53D6\u5BC6\u94A5\u5E93\u7684\u5BC6\u94A5\u53E3\u4EE4\u65F6\u51FA\u9519\u3002

WSS1529.exception.in.certstore.callback=WSS1529: CertStoreCallback \u4E2D\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
WSS1530.exception.in.certstore.lookup=WSS1530: \u67E5\u627E CertStore \u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
WSS1531.exception.instantiating.certselector=WSS1531: \u5B9E\u4F8B\u5316\u7528\u6237\u63D0\u4F9B\u7684 CertSelector \u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
WSS1532.exception.instantiating.aliasselector=WSS1532: \u5B9E\u4F8B\u5316\u7528\u6237\u63D0\u4F9B\u7684 AliasSelector \u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
WSS1533.X509.SelfSignedCertificate.notValid=WSS1533: \u81EA\u7B7E\u540D\u8BC1\u4E66\u9A8C\u8BC1\u5931\u8D25\u3002
WSS1534.no.keystore.set.in.keystorecallback.callbackhandler=WSS1534: CallbackHandler \u672A\u5728 KeyStorCallback \u4E2D\u8BBE\u7F6E\u5BC6\u94A5\u5E93
WSS1535.error.keystore.using.callback=WSS1535: \u4F7F\u7528\u5BC6\u94A5\u5E93\u56DE\u8C03\u83B7\u53D6\u5BC6\u94A5\u5E93\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
WSS1536.no.truststore.set.in.truststorecallback=WSS1536: CallbackHandler \u672A\u5728 TrustStorCallback \u4E2D\u8BBE\u7F6E TrustStore
WSS1537.error.truststore.using.callback=WSS1537: \u4F7F\u7528 truststore \u56DE\u8C03\u83B7\u53D6 TrustStore \u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
WSS1538.error.getting.privateKey=WSS1538: \u83B7\u53D6\u79C1\u6709\u5BC6\u94A5\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
WSS1539.privateKey.null.error=WSS1539: PrivateKeyCallback \u8FD4\u56DE\u7684 PrivateKey \u4E3A\u7A7A\u503C
WSS1540.keystore.not.found.check.config=WSS1540: \u627E\u4E0D\u5230\u5BC6\u94A5\u5E93, \u8BF7\u68C0\u67E5 WSIT \u914D\u7F6E\u4E2D\u7684\u5BC6\u94A5\u5E93\u65AD\u8A00
