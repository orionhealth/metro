#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#### Logging Error codes

WST0001.unsupported.proofToken.type=WST0001:\uC9C0\uC6D0\uB418\uC9C0 \uC54A\uB294 \uC99D\uBA85 \uD1A0\uD070 \uC720\uD615 {0}\uC774(\uAC00) {1} \uC11C\uBE44\uC2A4\uC5D0 \uB300\uD574 \uC9C0\uC815\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uD5C8\uC6A9\uB418\uB294 \uC720\uD615\uC740 \uACC4\uC0B0\uB41C \uD0A4\uC640 \uC774\uC9C4 \uBCF4\uC548\uC785\uB2C8\uB2E4.

WST0002.fail.marshal.tosource=WST0002: {0}\uC744(\uB97C) \uC18C\uC2A4\uB85C \uB9C8\uC15C\uB9C1\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0003.error.creating.wstrustfact=WST0003: WSTrustElementFactory\uB97C \uC0DD\uC131\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0004.unknown.serviceprovider=WST0004:\uC54C \uC218 \uC5C6\uB294 \uB300\uC0C1 \uC11C\uBE44\uC2A4 \uC81C\uACF5\uC790 {0}\uC785\uB2C8\uB2E4. STS \uAD6C\uC131\uC774 \uC11C\uBE44\uC2A4\uC758 \uBA54\uD0C0 \uB370\uC774\uD130\uB97C \uD3EC\uD568\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

WST0005.classnotfound.null.contract=WST0005:{0} \uD074\uB798\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC5B4\uC11C \uC2E0\uB8B0 \uACC4\uC57D\uC744 \uC5BB\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0006.fail.rst.source=WST0006:{0} \uC18C\uC2A4\uC5D0\uC11C RST \uC0DD\uC131\uC744 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.

WST0007.fail.rst.elem=WST0007:{0} \uC694\uC18C\uC5D0\uC11C RST \uC0DD\uC131\uC744 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.

WST0008.fail.rstr.source=WST0008:{0} \uC18C\uC2A4\uC5D0\uC11C RSTR \uC0DD\uC131\uC744 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.

WST0009.fail.rstr.elem=WST0009:{0} \uC694\uC18C\uC5D0\uC11C RSTR \uC0DD\uC131\uC744 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.

# {0} - "RST"/"RSTRCollection"/"STR" ("Request Security Token", "Security Token Reference")
WST0010.failed.creation.from.jaxbele=WST0010:JAXBElement\uC5D0\uC11C {0}\uC744(\uB97C) \uC0DD\uC131\uD558\uB294 \uC911 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0011.parserconfig.ex.toElement=WST0011:\uC694\uC18C\uB97C \uC0DD\uC131\uD558\uB294 \uC911 \uAD6C\uBB38 \uBD84\uC11D\uAE30 \uAD6C\uC131 \uC608\uC678 \uC0AC\uD56D\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0012.jaxb.ex.toElement=WST0012:\uC694\uC18C\uB97C \uC0DD\uC131\uD558\uB294 \uC911 JAXBException\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0013.error.secret.key=WST0013:{2} \uC11C\uBE44\uC2A4\uC5D0 \uC801\uC6A9\uB41C {1} \uD06C\uAE30\uC758 {0} \uC54C\uACE0\uB9AC\uC998\uC73C\uB85C \uBCF4\uC548 \uD0A4\uB97C \uACC4\uC0B0\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0014.uri.syntax=WST0014:RST \uCEE8\uD14D\uC2A4\uD2B8\uC5D0\uC11C \uBD80\uC801\uD569\uD55C URI\uB97C \uC5BB\uC5C8\uC2B5\uB2C8\uB2E4.

# {0} - user name, {1} - token type, {2} - URL e.g.: WST0015:The client CN=a,L=b,ST=c,2.5.4.17=#13053238323039 is not authorized to be issued the token of type urn:oasis:names:tc:SAML:2.0:assertion applied to http://localhost:8080/myService.
WST0015.client.not.authorized=WST0015:{0} \uD074\uB77C\uC774\uC5B8\uD2B8\uB294 {2}\uC5D0 \uC801\uC6A9\uB41C {1} \uC720\uD615\uC758 \uD1A0\uD070\uC744 \uBC1C\uD589\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0016.problem.itCtx=WST0016:{1} \uC11C\uBE44\uC2A4\uC5D0 \uB300\uD55C \uD1A0\uD070\uC744 \uC694\uCCAD\uD560 \uB54C STS {0} \uD638\uCD9C \uB610\uB294 \uC751\uB2F5 \uCC98\uB9AC \uC911 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

# STS = Security Token Service.
WST0017.service.portname.error=WST0017:STS \uBA54\uD0C0 \uB370\uC774\uD130\uB97C \uC5BB\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. STS {0}\uC5D0 \uB300\uD55C MEX \uD638\uCD9C\uC744 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.

WST0018.tokens.null=WST0018:{0} \uC11C\uBE44\uC2A4\uC5D0 \uC801\uC6A9\uB41C Request Security Token Response\uAC00 \uBD80\uC801\uD569\uD569\uB2C8\uB2E4. RSTR\uC774 \uBC1C\uD589\uB41C \uD1A0\uD070\uC774\uB098 \uC99D\uBA85 \uD1A0\uD070\uC744 \uD3EC\uD568\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

WST0019.invalid.proofToken.type=WST0019:{1} \uC11C\uBE44\uC2A4\uC5D0 \uB300\uD55C \uC99D\uBA85 \uD1A0\uD070 \uC720\uD615 {0}\uC774(\uAC00) \uBD80\uC801\uD569\uD569\uB2C8\uB2E4.

# {0} - text in base64 encoding (e.g. AGVsbG8=)
WST0020.error.decoding=WST0020:{0}\uC744(\uB97C) \uB514\uCF54\uB529\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0021.error.unmarshal.domElement=WST0021:dom \uC694\uC18C\uC5D0\uC11C JAXBElement\uB85C \uB9C8\uC15C\uB9C1\uC744 \uCDE8\uC18C\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0022.invalid.entropy=WST0022:\uBD80\uC801\uD569\uD55C \uC5D4\uD2B8\uB85C\uD53C \uC720\uD615: {0}. \uD5C8\uC6A9\uB418\uB294 \uC720\uD615\uC740 Binary, EncryptedType, Custom\uC785\uB2C8\uB2E4.

WST0023.invalid.uri.syntax=WST0023:\uBD80\uC801\uD569\uD55C URI \uAD6C\uBB38: {0}.

WST0024.invalid.request.type=WST0024:\uBD80\uC801\uD569\uD55C \uC694\uCCAD \uC720\uD615: {0}. Issue, Cancel, KeyExchange, Renew, Validate \uC911 \uD558\uB098\uC5EC\uC57C \uD569\uB2C8\uB2E4.

WST0025.invalid.key.type=WST0025:\uBD80\uC801\uD569\uD55C \uD0A4 \uC720\uD615 {0}\uC774(\uAC00) {1} \uC11C\uBE44\uC2A4\uC5D0 \uC801\uC6A9\uB429\uB2C8\uB2E4. Publickey, Symmetric Key, No Proof Key \uC911 \uD558\uB098\uC5EC\uC57C \uD569\uB2C8\uB2E4.

WST0026.invalid.ck.algorithm.E=WST0026:\uBD80\uC801\uD569\uD55C \uACC4\uC0B0\uB41C \uD0A4 \uC54C\uACE0\uB9AC\uC998 {0}.
WST0026.invalid.ck.algorithm=WST0026:\uBD80\uC801\uD569\uD55C \uACC4\uC0B0\uB41C \uD0A4 \uC54C\uACE0\uB9AC\uC998 {0}. HASH \uB610\uB294 PSHA1 \uC911 \uD558\uB098\uC5EC\uC57C \uD569\uB2C8\uB2E4.

WST0028.invalid.ck=WST0028:\uBD80\uC801\uD569\uD55C \uACC4\uC0B0\uB41C \uD0A4 URI {0}.

WST0029.could.not.get.sts.location=WST0029:{0} \uC11C\uBE44\uC2A4 \uC561\uC138\uC2A4\uB97C \uC704\uD574 IssuedToken \uB610\uB294 \uD074\uB77C\uC774\uC5B8\uD2B8 \uAD6C\uC131\uC5D0\uC11C STS \uC704\uCE58\uB97C \uC5BB\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0030.requestor.null=WST0030:\uC8FC\uCCB4\uAC00 \uB110\uC785\uB2C8\uB2E4. \uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uC778\uC99D\uB418\uC9C0 \uC54A\uC558\uAC70\uB098, \uC778\uC99D \uB3D9\uC548 \uC8FC\uCCB4\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

# {0} - token type, {1} URL
WST0031.unsupported.token.type=WST0031:\uC9C0\uC6D0\uB418\uC9C0 \uC54A\uB294 \uD1A0\uD070 \uC720\uD615 {0}\uC774(\uAC00) {1}\uC5D0 \uC801\uC6A9\uB429\uB2C8\uB2E4. SAML 1.0 \uB610\uB294 SAML 1.1 \uAC80\uC99D \uD1A0\uD070 \uC720\uD615\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.

WST0032.error.creating.SAML.assertion=WST0032:SAML \uAC80\uC99D\uC744 \uC0DD\uC131\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0033.unable.get.service.cert=WST0033:{0} \uC11C\uBE44\uC2A4\uC5D0 \uB300\uD55C \uC11C\uBE44\uC2A4 \uC778\uC99D\uC11C\uB97C \uAC00\uC838\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0034.unable.get.client.cert=WST0034:\uD074\uB77C\uC774\uC5B8\uD2B8 \uC778\uC99D\uC11C\uB97C \uAC00\uC838\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uC8FC\uCCB4\uAC00 \uC801\uD569\uD55C \uC778\uC99D\uC11C\uB97C \uD3EC\uD568\uD558\uC9C0 \uC54A\uAC70\uB098 X509 \uC778\uC99D\uC11C \uCD94\uAC00 \uC911 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0035.unable.create.sign.saml.assertion=WST0035:SAML \uAC80\uC99D \uC11C\uBA85\uC744 \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0036.unable.create.keyInfo=WST0036:\uD0A4 \uC815\uBCF4\uB97C \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0037.error.computing.key=WST0037:\uD0A4 \uACC4\uC0B0 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0038.init.contract.fail=WST0038:\uC2E0\uB8B0 \uACC4\uC57D\uC744 \uC124\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0039.error.creating.docfactory=WST0039:\uAD6C\uBB38 \uBD84\uC11D\uAE30 \uC608\uC678 \uC0AC\uD56D\uC73C\uB85C \uC778\uD574 \uBB38\uC11C \uD329\uD1A0\uB9AC \uC0DD\uC131 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0040.error.encrypt.proofkey=WST0040:{0} \uC11C\uBE44\uC2A4\uC5D0 \uB300\uD55C \uC99D\uBA85 \uD0A4\uB97C \uC554\uD638\uD654\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0041.service.not.created=WST0041:\uC798\uBABB\uB41C \uD615\uC2DD\uC758 URL {0}(\uC73C)\uB85C \uC778\uD574 \uC11C\uBE44\uC2A4\uB97C \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0042.no.matching.service.mex=WST0042:{0} \uB05D\uC810\uACFC \uC77C\uCE58\uD558\uB294 \uC11C\uBE44\uC2A4\uB97C \uBA54\uD0C0 \uB370\uC774\uD130\uC5D0\uC11C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0043.unable.get.sts.key=WST0043:STS\uC5D0 \uB300\uD55C \uD0A4\uB97C \uAC00\uC838\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST0044.error.encrypt.issued.token=WST0044:{0} \uC11C\uBE44\uC2A4\uC5D0 \uB300\uD574 \uBC1C\uD589\uB41C \uD1A0\uD070\uC744 \uC554\uD638\uD654\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0045.error.unmarshall.claims=WST0045: {0} \uC11C\uBE44\uC2A4\uC5D0 \uB300\uD55C \uD074\uB808\uC784\uC758 \uB9C8\uC15C\uB9C1\uC744 \uCDE8\uC18C\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST0046.token.expired=WST0046: \uD1A0\uD070\uC774 \uB9CC\uB8CC\uB428: \uC0DD\uC131 {0}, \uB9CC\uB8CC {1}, \uD604\uC7AC {2}

#### Info, Fine and Warning messages ####
#### Codes starting from 1000+
WST1001.token.type=WST1001:\uD1A0\uD070 \uC720\uD615: {0}.

WST1002.provider.type=WST1002:STS \uC81C\uACF5\uC790 \uAD6C\uC131 \uC720\uD615 {0}.

WST1003.tokentype.appliesto.null=WST1003:TokenType \uBC0F AppliesTo\uAC00 \uBAA8\uB450 \uB110\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

WST1004.error.marshal.toString=WST1004:\uB85C\uAE45\uC744 \uC704\uD574 {0} \uC694\uC18C\uB97C \uBB38\uC790\uC5F4\uB85C \uB9C8\uC15C\uB9C1\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

WST1006.created.rst.issue=WST1006:\uBC1C\uD589\uC6A9 RST\uB97C \uC0DD\uC131\uD568:\n {0}.

WST1007.created.rstr.issue=WST1007:\uBC1C\uD589\uC6A9 RSTR\uC744 \uC0DD\uC131\uD568:\n {0}.

WST1008.created.rstr.cancel=WST1008:\uCDE8\uC18C\uC6A9 RSTR\uC744 \uC0DD\uC131\uD568:\n {0}.

WST1009.null.binary.secret=WST1009:\uC774\uC9C4 \uBCF4\uC548\uC774 \uB110\uC785\uB2C8\uB2E4. RST\uC758 ClientEntropy\uAC00 \uC774\uC9C4 \uBCF4\uC548\uC744 \uD3EC\uD568\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

WST1010.key.size=WST1010:Keysize \uAC12: {0}. \uAE30\uBCF8\uAC12: {1}.

WST1011.problem.metadata=WST1011:\uBC1C\uD589\uB41C \uD1A0\uD070\uC5D0\uC11C \uBA54\uD0C0 \uB370\uC774\uD130\uB97C \uCD94\uCD9C\uD558\uB294 \uC911 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. STS URI: {0}.

WST1012.service.portname.mex=WST1012:MEX\uB97C \uD1B5\uD574 STS \uC11C\uBE44\uC2A4 \uBC0F \uD3EC\uD2B8 \uC774\uB984\uC744 \uAC00\uC838\uC624\uB294 \uC911\uC785\uB2C8\uB2E4. ServiceName: {0}, PortName: {1}.

WST1013.sts.uri.client=WST1013:\uD074\uB77C\uC774\uC5B8\uD2B8 \uAD6C\uC131\uC5D0\uC11C STS \uC704\uCE58\uB97C \uAC00\uC838\uC624\uB294 \uC911\uC785\uB2C8\uB2E4. STS URI: {0}.

WST1014.response.invoking.rst=WST1014:RST \uD638\uCD9C\uC5D0 \uB300\uD55C RSTR \uC751\uB2F5:\n {0}.
