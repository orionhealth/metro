#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# ResourceBundle properties file for optimized tokens

WSS1801.bst.creation.failed = WSS1801: erro ao construir o BinarySecurityToken.

WSS1802.wrong.tokeninclusion.policy = WSS1802: a pol\u00EDtica IncludeToken \u00E9 Nunca e WSSAssertion tem os tipos de refer\u00EAncia KeyIdentifier/Thumbprint definidos como falso

WSS1803.unsupported.reference.type = WSS1803: o tipo de refer\u00EAncia {0} n\u00E3o \u00E9 suportado

WSS1804.wrong.encrypted.key = WSS1804: o tamanho do Id encryptedKey \u00E9 0

WSS1805.derivedkeys.with.asymmetricbinding.unsupported = WSS1805: bind assim\u00E9trico com DerivedKeys na Pol\u00EDtica X509Token Ainda N\u00E3o \u00E9 Suportado

WSS1806.error.generating.symmetric.key: WSS1806: erro ao gerar chaves sim\u00E9tricas. O algoritmo fornecido estava incorreto.

WSS1807.cert.proofKey.null.issuedtoken: WSS1807: o Certificado do Solicitante e a Chave de Prova s\u00E3o nulos para o Token Emitido

WSS1808.id.notset.encrypted.issuedtoken: WSS1808: atributo do id n\u00E3o definido no IssuedToken Criptografado

WSS1809.sct.not.found: WSS1809: token SecureConversation n\u00E3o encontrado na sess\u00E3o.

WSS1810.null.privatekey.saml: WSS1810: a chave Privada n\u00E3o foi definida como nula no bind de chave privada da pol\u00EDtica SAML usada para Assinatura

WSS1811.null.saml.assertion: WSS1811: asser\u00E7\u00E3o SAML definida como nula para Bind de SAML usado para Assinatura

WSS1812.missing.cert.samlassertion: WSS1812: n\u00E3o foi poss\u00EDvel localizar o Certificado correspondente \u00E0 chave em SubjectConfirmation da Asser\u00E7\u00E3o SAML

WSS1813.unsupported.embeddedreferencetype.saml = WSS1813: tipo de Refer\u00EAncia Incorporado para Asser\u00E7\u00F5es SAML n\u00E3o suportado ainda

WSS1814.error.encoding.certificate = WSS1814: erro ao codificar o Certificado X509

WSS1815.error.processing.str = WSS1815: erro ao processar SecurityTokenReference na mensagem de entrada

# {0} - "Direct Reference"/"KeyIdentifier"/"Issuer Serial"
WSS1816.error.reference.mechanism = WSS1816: erro ao resolver {0}

# {0} - "Direct Reference"/"KeyIdentifier"/"Issuer Serial"
WSS1817.error.reference.canwriter = WSS1817: erro ao gravar {0} no gravador canonizado

WSS1818.algorithm.notset.derivedkey = WSS1818: algoritmo n\u00E3o definido para derivar a chave

WSS1819.error.symmkey.derivedkey = WSS1819: erro ao gerar SymmetricKey para DerivedKeyToken

WSS1820.error.nonce.derivedkey = WSS1820: erro ao decodificar nonce para DerivedKey com ID: {0}

WSS1821.invalid.dkt.token = WSS1821: token DerivedKey Inv\u00E1lido. Deslocamento e Gera\u00E7\u00E3o s\u00E3o especificados.

WSS1822.kerberos.always.notallowed = WSS1822: IncludeToken Sempre e AlwaysToRecipient n\u00E3o permitido para Tokens Kerberos.

WSS1823.keyPair.proofKey.null.issuedtoken: WSS1823: chave de Prova e KeyPair de RSA para token de suporte (KeyValueToken ou RsaToken) s\u00E3o nulos para o Token Emitido

# 1850 onwards for FINEST, INFO and WARNING messages

WSS1851.referencetype.x509.token = WSS1851: tipo de Refer\u00EAncia do Token X509: {0}

WSS1852.keyIdentifier.empty= WSS1852: o valor KeyIdentifier n\u00E3o pode ficar vazio. Poss\u00EDvel causa, a vers\u00E3o do certificado que est\u00E1 sendo usada n\u00E3o suporta SubjectKeyIdentifier.

WSS1853.referencetype.kerberos.token = WSS1853: tipo de refer\u00EAncia para Token de Kerberos: {0}

WSS1854.two.tokens.with.sameID=WSS1854: encontrou dois tokens com o mesmo atributo do Id

WSS1855.xml.stream.reader.error = WSS1855: exce\u00E7\u00E3o de leitor de fluxo de xml durante getKey

WSS1856.null.usernametoken = WSS: usernametoken nulo
