#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# ResourceBundle properties file for optimized tokens

WSS1801.bst.creation.failed = WSS1801: Error occurred while constructing BinarySecurityToken.

WSS1802.wrong.tokeninclusion.policy = WSS1802: IncludeToken policy is Never and WSSAssertion has KeyIdentifier/Thumbprint reference types set to false

WSS1803.unsupported.reference.type = WSS1803: The reference type {0} is not supported

WSS1804.wrong.encrypted.key = WSS1804: The length of encryptedKey Id is 0

WSS1805.derivedkeys.with.asymmetricbinding.unsupported = WSS1805: Asymmetric Binding with DerivedKeys under X509Token Policy Not Yet Supported

WSS1806.error.generating.symmetric.key: WSS1806: Error in generating symmetric keys. The algorithm provided was incorrect.

WSS1807.cert.proofKey.null.issuedtoken: WSS1807: Requestor Certificate and Proof Key are both null for Issued Token

WSS1808.id.notset.encrypted.issuedtoken: WSS1808: Id attribute not set on Encrypted IssuedToken

WSS1809.sct.not.found: WSS1809: SecureConversation token not found in the session.

WSS1810.null.privatekey.saml: WSS1810: Private key is set to null inside the private key binding for SAML policy used for Signature

WSS1811.null.saml.assertion: WSS1811: SAML assertion is set to null for SAML Binding used for Signature

WSS1812.missing.cert.samlassertion: WSS1812: Could not locate Certificate corresponding to Key in SubjectConfirmation of SAML Assertion

WSS1813.unsupported.embeddedreferencetype.saml = WSS1813: Embedded Reference Type for SAML Assertions not supported yet

WSS1814.error.encoding.certificate = WSS1814: Error occurred while encoding X509 Certificate

WSS1815.error.processing.str = WSS1815: Error while processing SecurityTokenReference in incoming message

# {0} - "Direct Reference"/"KeyIdentifier"/"Issuer Serial"
WSS1816.error.reference.mechanism = WSS1816: Error occurred while resolving {0}

# {0} - "Direct Reference"/"KeyIdentifier"/"Issuer Serial"
WSS1817.error.reference.canwriter = WSS1817: Error occurred while writing {0} to canonicalized writer

WSS1818.algorithm.notset.derivedkey = WSS1818: Algorithm not set for deriving key

WSS1819.error.symmkey.derivedkey = WSS1819: Error occurred while generating SymmetricKey for DerivedKeyToken

WSS1820.error.nonce.derivedkey = WSS1820: Error occurred while decoding nonce for DerivedKey with ID: {0}

WSS1821.invalid.dkt.token = WSS1821: Invalid DerivedKey Token. Offset and Generation both are specified.

WSS1822.kerberos.always.notallowed = WSS1822: IncludeToken Always and AlwaysToRecipient not allowed for Kerberos Tokens.

WSS1823.keyPair.proofKey.null.issuedtoken: WSS1823: Proof Key and RSA KeyPair for Supporting token (KeyValueToken or RsaToken) are both null for Issued Token

# 1850 onwards for FINEST, INFO and WARNING messages

WSS1851.referencetype.x509.token = WSS1851: Reference type for X509 Token: {0}

WSS1852.keyIdentifier.empty= WSS1852: KeyIdentifier value cannot be empty. Possible cause, certificate version being used does not support SubjectKeyIdentifier.

WSS1853.referencetype.kerberos.token = WSS1853: Reference type for Kerberos Token: {0}

WSS1854.two.tokens.with.sameID=WSS1854: Found two tokens with same Id attribute

WSS1855.xml.stream.reader.error = WSS1855: xml stream reader exception during getKey

WSS1856.null.usernametoken = WSS:  null usernametoken
