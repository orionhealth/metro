#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# ResourceBundle properties file for optimized tokens

WSS1801.bst.creation.failed = WSS1801: se ha producido un error al construir BinarySecurityToken.

WSS1802.wrong.tokeninclusion.policy = WSS1802: la pol\u00EDtica IncludeToken es Never y los tipos de referencia KeyIdentifier/Thumbprint de la afirmaci\u00F3n WSS est\u00E1n definidos como false

WSS1803.unsupported.reference.type = WSS1803: el tipo de referencia {0} no est\u00E1 soportado

WSS1804.wrong.encrypted.key = WSS1804: la longitud del identificador de encryptedKey es 0

WSS1805.derivedkeys.with.asymmetricbinding.unsupported = WSS1805: el enlace asim\u00E9trico con DerivedKeys en la pol\u00EDtica de X509Token a\u00FAn no est\u00E1 soportado

WSS1806.error.generating.symmetric.key: WSS1806: error al generar las claves sim\u00E9tricas. El algoritmo proporcionado no es correcto.

WSS1807.cert.proofKey.null.issuedtoken: WSS1807: el certificado del solicitante y la clave de prueba son nulos para el token emitido

WSS1808.id.notset.encrypted.issuedtoken: WSS1808: el atributo de identificador no se ha definido en el valor IssuedToken cifrado

WSS1809.sct.not.found: WSS1809: no se ha encontrado el token SecureConversation en la sesi\u00F3n.

WSS1810.null.privatekey.saml: WSS1810: la clave privada est\u00E1 definida como nula en el enlace de clave privada para la pol\u00EDtica de SAML utilizada para la firma

WSS1811.null.saml.assertion: WSS1811: la afirmaci\u00F3n SAML se ha definido como nula para el enlace de SAML utilizado para la firma

WSS1812.missing.cert.samlassertion: WSS1812: no se ha encontrado el certificado correspondiente a la clave en SubjectConfirmation de la afirmaci\u00F3n SAML

WSS1813.unsupported.embeddedreferencetype.saml = WSS1813: el tipo de referencia embebida de las afirmaciones SAML a\u00FAn no est\u00E1 soportado

WSS1814.error.encoding.certificate = WSS1814: se ha producido un error al codificar el certificado X509

WSS1815.error.processing.str = WSS1815: error al procesar SecurityTokenReference en el mensaje entrante

# {0} - "Direct Reference"/"KeyIdentifier"/"Issuer Serial"
WSS1816.error.reference.mechanism = WSS1816: se ha producido un error al resolver {0}

# {0} - "Direct Reference"/"KeyIdentifier"/"Issuer Serial"
WSS1817.error.reference.canwriter = WSS1817: se ha producido un error al escribir {0} en el escritor con formato can\u00F3nico

WSS1818.algorithm.notset.derivedkey = WSS1818: no se ha definido el algoritmo para la clave derivada

WSS1819.error.symmkey.derivedkey = WSS1819: se ha producido un error al generar SymmetricKey para DerivedKeyToken

WSS1820.error.nonce.derivedkey = WSS1820: se ha producido un error al descodificar el nonce para el valor DerivedKey con el identificador: {0}

WSS1821.invalid.dkt.token = WSS1821: Token DerivedKey no v\u00E1lido. Se ha especificado tanto el desplazamiento como la generaci\u00F3n.

WSS1822.kerberos.always.notallowed = WSS1822: IncludeToken Always y AlwaysToRecipient no est\u00E1n permitidos para los tokens Kerberos.

WSS1823.keyPair.proofKey.null.issuedtoken: WSS1823: la clave de prueba y el valor KeyPair de RSA para el token de soporte (KeyValueToken o RsaToken) son nulos para el token emitido

# 1850 onwards for FINEST, INFO and WARNING messages

WSS1851.referencetype.x509.token = WSS1851: Tipo de referencia para el token X509: {0}

WSS1852.keyIdentifier.empty= WSS1852: el valor KeyIdentifier no puede estar vac\u00EDo. Como causa posible, puede que la versi\u00F3n del certificado que se est\u00E1 utilizando no soporte SubjectKeyIdentifier.

WSS1853.referencetype.kerberos.token = WSS1853: Tipo de referencia para el token Kerberos: {0}

WSS1854.two.tokens.with.sameID=WSS1854: se han encontrado dos tokens con el mismo atributo de identificador

WSS1855.xml.stream.reader.error = WSS1855: excepci\u00F3n del lector de flujo XML al obtener la clave

WSS1856.null.usernametoken = WSS: valor usernametoken nulo
